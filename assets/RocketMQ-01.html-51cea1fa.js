import{_ as p}from"./RocketMQ角色-af9c6e95.js";import{_ as l,r as i,o,c,a as s,b as n,d as e,e as a}from"./app-8a8706d6.js";const d="/assets/queue1-4098ec8b.png",r="/assets/解耦1-a5463bfc.png",u="/assets/解耦2-2b52c87b.png",h="/assets/mq-5-2bf10c8f.png",k="/assets/mq-6-348f4851.png",m="/assets/mq-1-93d512df.png",v="/assets/mq-2-50f6aa1e.png",g="/assets/MQ比较-4974f098.png",b="/assets/RocketMQ集群-54d90065.png",w="/assets/jps1-83850453.png",y="/assets/rocketmq-console-cb07b261.png",x="/assets/rocketmq-console2-d823c2cb.png",f="/assets/rocketmq-console3-0d09acfe.png",q="/assets/事务消息-af8dff93.png",S={},_=a('<h1 id="_1-mq介绍" tabindex="-1"><a class="header-anchor" href="#_1-mq介绍" aria-hidden="true">#</a> 1. MQ介绍</h1><h2 id="_1-1-为什么要用mq" tabindex="-1"><a class="header-anchor" href="#_1-1-为什么要用mq" aria-hidden="true">#</a> 1.1 为什么要用MQ</h2><p>消息队列是一种“先进先出”的数据结构</p><p><img src="'+d+'" alt=""></p><p>其应用场景主要包含以下3个方面</p><ul><li>应用解耦</li></ul><p>系统的耦合性越高，容错性就越低。以电商应用为例，用户创建订单后，如果耦合调用库存系统、物流系统、支付系统，任何一个子系统出了故障或者因为升级等原因暂时不可用，都会造成下单操作异常，影响用户使用体验。</p><p><img src="'+r+'" alt=""></p><p>使用消息队列解耦合，系统的耦合性就会提高了。比如物流系统发生故障，需要几分钟才能来修复，在这段时间内，物流系统要处理的数据被缓存到消息队列中，用户的下单操作正常完成。当物流系统回复后，补充处理存在消息队列中的订单消息即可，终端系统感知不到物流系统发生过几分钟故障。</p><p><img src="'+u+'" alt=""></p><ul><li>流量削峰</li></ul><p><img src="'+h+'" alt=""></p><p>应用系统如果遇到系统请求流量的瞬间猛增，有可能会将系统压垮。有了消息队列可以将大量请求缓存起来，分散到很长一段时间处理，这样可以大大提到系统的稳定性和用户体验。</p><p><img src="'+k+'" alt=""></p><p>一般情况，为了保证系统的稳定性，如果系统负载超过阈值，就会阻止用户请求，这会影响用户体验，而如果使用消息队列将请求缓存起来，等待系统处理完毕后通知用户下单完毕，这样总不能下单体验要好。</p><p><u>处于经济考量目的：</u></p><p>业务系统正常时段的QPS如果是1000，流量最高峰是10000，为了应对流量高峰配置高性能的服务器显然不划算，这时可以使用消息队列对峰值流量削峰</p><ul><li>数据分发</li></ul><p><img src="'+m+'" alt=""></p><p>通过消息队列可以让数据在多个系统更加之间进行流通。数据的产生方不需要关心谁来使用数据，只需要将数据发送到消息队列，数据使用方直接在消息队列中直接获取数据即可</p><p><img src="'+v+'" alt=""></p><h2 id="_1-2-mq的优点和缺点" tabindex="-1"><a class="header-anchor" href="#_1-2-mq的优点和缺点" aria-hidden="true">#</a> 1.2 MQ的优点和缺点</h2><p>优点：解耦、削峰、数据分发</p><p>缺点包含以下几点：</p><ul><li><p>系统可用性降低</p><p>系统引入的外部依赖越多，系统稳定性越差。一旦MQ宕机，就会对业务造成影响。</p><p>如何保证MQ的高可用？</p></li><li><p>系统复杂度提高</p><p>MQ的加入大大增加了系统的复杂度，以前系统间是同步的远程调用，现在是通过MQ进行异步调用。</p><p>如何保证消息没有被重复消费？怎么处理消息丢失情况？那么保证消息传递的顺序性？</p></li><li><p>一致性问题</p><p>A系统处理完业务，通过MQ给B、C、D三个系统发消息数据，如果B系统、C系统处理成功，D系统处理失败。</p><p>如何保证消息数据处理的一致性？</p></li></ul><h2 id="_1-3-各种mq产品的比较" tabindex="-1"><a class="header-anchor" href="#_1-3-各种mq产品的比较" aria-hidden="true">#</a> 1.3 各种MQ产品的比较</h2><p>常见的MQ产品包括Kafka、ActiveMQ、RabbitMQ、RocketMQ。</p><p><img src="'+g+'" alt=""></p><h1 id="_2-rocketmq快速入门" tabindex="-1"><a class="header-anchor" href="#_2-rocketmq快速入门" aria-hidden="true">#</a> 2. RocketMQ快速入门</h1><p>RocketMQ是阿里巴巴2016年MQ中间件，使用Java语言开发，在阿里内部，RocketMQ承接了例如“双11”等高并发场景的消息流转，能够处理万亿级别的消息。</p><h2 id="_2-1-准备工作" tabindex="-1"><a class="header-anchor" href="#_2-1-准备工作" aria-hidden="true">#</a> 2.1 准备工作</h2><h3 id="_2-1-1-下载rocketmq" tabindex="-1"><a class="header-anchor" href="#_2-1-1-下载rocketmq" aria-hidden="true">#</a> 2.1.1 下载RocketMQ</h3><p>RocketMQ最新版本：4.5.1</p>',33),M={href:"https://www.apache.org/dyn/closer.cgi?path=rocketmq/4.5.1/rocketmq-all-4.5.1-bin-release.zip",target:"_blank",rel:"noopener noreferrer"},T=a(`<h3 id="_2-2-2-环境要求" tabindex="-1"><a class="header-anchor" href="#_2-2-2-环境要求" aria-hidden="true">#</a> 2.2.2 环境要求</h3><ul><li><p>Linux64位系统</p></li><li><p>JDK1.8(64位)</p></li><li><p>源码安装需要安装Maven 3.2.x</p></li></ul><h2 id="_2-2-安装rocketmq" tabindex="-1"><a class="header-anchor" href="#_2-2-安装rocketmq" aria-hidden="true">#</a> 2.2 安装RocketMQ</h2><h3 id="_2-2-1-安装步骤" tabindex="-1"><a class="header-anchor" href="#_2-2-1-安装步骤" aria-hidden="true">#</a> 2.2.1 安装步骤</h3><p>本教程以二进制包方式安装</p><ol><li>解压安装包</li><li>进入安装目录</li></ol><h3 id="_2-2-2-目录介绍" tabindex="-1"><a class="header-anchor" href="#_2-2-2-目录介绍" aria-hidden="true">#</a> 2.2.2 目录介绍</h3><ul><li>bin：启动脚本，包括shell脚本和CMD脚本</li><li>conf：实例配置文件 ，包括broker配置文件、logback配置文件等</li><li>lib：依赖jar包，包括Netty、commons-lang、FastJSON等</li></ul><h2 id="_2-3-启动rocketmq" tabindex="-1"><a class="header-anchor" href="#_2-3-启动rocketmq" aria-hidden="true">#</a> 2.3 启动RocketMQ</h2><ol><li>启动NameServer</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 1.启动NameServer</span>
<span class="token function">nohup</span> <span class="token function">sh</span> bin/mqnamesrv <span class="token operator">&amp;</span>
<span class="token comment"># 2.查看启动日志</span>
<span class="token function">tail</span> <span class="token parameter variable">-f</span> ~/logs/rocketmqlogs/namesrv.log
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>启动Broker</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 1.启动Broker</span>
<span class="token function">nohup</span> <span class="token function">sh</span> bin/mqbroker <span class="token parameter variable">-n</span> localhost:9876 <span class="token operator">&amp;</span>
<span class="token comment"># 2.查看启动日志</span>
<span class="token function">tail</span> <span class="token parameter variable">-f</span> ~/logs/rocketmqlogs/broker.log 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>问题描述：</p><p>RocketMQ默认的虚拟机内存较大，启动Broker如果因为内存不足失败，需要编辑如下两个配置文件，修改JVM内存大小</p></li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 编辑runbroker.sh和runserver.sh修改默认JVM大小</span>
<span class="token function">vi</span> runbroker.sh
<span class="token function">vi</span> runserver.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>参考设置：</li></ul><p><code>JAVA_OPT=&quot;\${JAVA_OPT} -server -Xms256m -Xmx256m -Xmn128m -XX:MetaspaceSize=128m -XX:MaxMetaspaceSize=320m&quot;</code></p><h2 id="_2-4-测试rocketmq" tabindex="-1"><a class="header-anchor" href="#_2-4-测试rocketmq" aria-hidden="true">#</a> 2.4 测试RocketMQ</h2><h3 id="_2-4-1-发送消息" tabindex="-1"><a class="header-anchor" href="#_2-4-1-发送消息" aria-hidden="true">#</a> 2.4.1 发送消息</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 1.设置环境变量</span>
<span class="token builtin class-name">export</span> <span class="token assign-left variable">NAMESRV_ADDR</span><span class="token operator">=</span>localhost:9876
<span class="token comment"># 2.使用安装包的Demo发送消息</span>
<span class="token function">sh</span> tools.sh org.apache.rocketmq.example.quickstart.Producer
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-4-2-接收消息" tabindex="-1"><a class="header-anchor" href="#_2-4-2-接收消息" aria-hidden="true">#</a> 2.4.2 接收消息</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 1.设置环境变量</span>
<span class="token builtin class-name">export</span> <span class="token assign-left variable">NAMESRV_ADDR</span><span class="token operator">=</span>localhost:9876
<span class="token comment"># 2.接收消息</span>
<span class="token function">sh</span> tools.sh org.apache.rocketmq.example.quickstart.Consumer
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-5-关闭rocketmq" tabindex="-1"><a class="header-anchor" href="#_2-5-关闭rocketmq" aria-hidden="true">#</a> 2.5 关闭RocketMQ</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 1.关闭NameServer</span>
<span class="token function">sh</span> bin/mqshutdown namesrv
<span class="token comment"># 2.关闭Broker</span>
<span class="token function">sh</span> bin/mqshutdown broker
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="_3-rocketmq集群搭建" tabindex="-1"><a class="header-anchor" href="#_3-rocketmq集群搭建" aria-hidden="true">#</a> 3. RocketMQ集群搭建</h1><h2 id="_3-1-各角色介绍" tabindex="-1"><a class="header-anchor" href="#_3-1-各角色介绍" aria-hidden="true">#</a> 3.1 各角色介绍</h2><ul><li>Producer：消息的发送者；举例：发信者</li><li>Consumer：消息接收者；举例：收信者</li><li>Broker：暂存和传输消息；举例：邮局</li><li>NameServer：管理Broker；举例：各个邮局的管理机构</li><li>Topic：区分消息的种类；一个发送者可以发送消息给一个或者多个Topic；一个消息的接收者可以订阅一个或者多个Topic消息</li><li>Message Queue：相当于是Topic的分区；用于并行发送和接收消息</li></ul><p><img src="`+p+'" alt=""></p><h2 id="_3-2-集群搭建方式" tabindex="-1"><a class="header-anchor" href="#_3-2-集群搭建方式" aria-hidden="true">#</a> 3.2 集群搭建方式</h2><h3 id="_3-2-1-集群特点" tabindex="-1"><a class="header-anchor" href="#_3-2-1-集群特点" aria-hidden="true">#</a> 3.2.1 集群特点</h3><ul><li><p>NameServer是一个几乎无状态节点，可集群部署，节点之间无任何信息同步。</p></li><li><p>Broker部署相对复杂，Broker分为Master与Slave，一个Master可以对应多个Slave，但是一个Slave只能对应一个Master，Master与Slave的对应关系通过指定相同的BrokerName，不同的BrokerId来定义，BrokerId为0表示Master，非0表示Slave。Master也可以部署多个。每个Broker与NameServer集群中的所有节点建立长连接，定时注册Topic信息到所有NameServer。</p></li><li><p>Producer与NameServer集群中的其中一个节点（随机选择）建立长连接，定期从NameServer取Topic路由信息，并向提供Topic服务的Master建立长连接，且定时向Master发送心跳。Producer完全无状态，可集群部署。</p></li><li><p>Consumer与NameServer集群中的其中一个节点（随机选择）建立长连接，定期从NameServer取Topic路由信息，并向提供Topic服务的Master、Slave建立长连接，且定时向Master、Slave发送心跳。Consumer既可以从Master订阅消息，也可以从Slave订阅消息，订阅规则由Broker配置决定。</p></li></ul><h3 id="_3-2-3-集群模式" tabindex="-1"><a class="header-anchor" href="#_3-2-3-集群模式" aria-hidden="true">#</a> 3.2.3 集群模式</h3><h4 id="_1-单master模式" tabindex="-1"><a class="header-anchor" href="#_1-单master模式" aria-hidden="true">#</a> 1）单Master模式</h4><p>这种方式风险较大，一旦Broker重启或者宕机时，会导致整个服务不可用。不建议线上环境使用,可以用于本地测试。</p><h4 id="_2-多master模式" tabindex="-1"><a class="header-anchor" href="#_2-多master模式" aria-hidden="true">#</a> 2）多Master模式</h4><p>一个集群无Slave，全是Master，例如2个Master或者3个Master，这种模式的优缺点如下：</p><ul><li>优点：配置简单，单个Master宕机或重启维护对应用无影响，在磁盘配置为RAID10时，即使机器宕机不可恢复情况下，由于RAID10磁盘非常可靠，消息也不会丢（异步刷盘丢失少量消息，同步刷盘一条不丢），性能最高；</li><li>缺点：单台机器宕机期间，这台机器上未被消费的消息在机器恢复之前不可订阅，消息实时性会受到影响。</li></ul><h4 id="_3-多master多slave模式-异步" tabindex="-1"><a class="header-anchor" href="#_3-多master多slave模式-异步" aria-hidden="true">#</a> 3）多Master多Slave模式（异步）</h4><p>每个Master配置一个Slave，有多对Master-Slave，HA采用异步复制方式，主备有短暂消息延迟（毫秒级），这种模式的优缺点如下：</p><ul><li>优点：即使磁盘损坏，消息丢失的非常少，且消息实时性不会受影响，同时Master宕机后，消费者仍然可以从Slave消费，而且此过程对应用透明，不需要人工干预，性能同多Master模式几乎一样；</li><li>缺点：Master宕机，磁盘损坏情况下会丢失少量消息。</li></ul><h4 id="_4-多master多slave模式-同步" tabindex="-1"><a class="header-anchor" href="#_4-多master多slave模式-同步" aria-hidden="true">#</a> 4）多Master多Slave模式（同步）</h4><p>每个Master配置一个Slave，有多对Master-Slave，HA采用同步双写方式，即只有主备都写成功，才向应用返回成功，这种模式的优缺点如下：</p><ul><li>优点：数据与服务都无单点故障，Master宕机情况下，消息无延迟，服务可用性与数据可用性都非常高；</li><li>缺点：性能比异步复制模式略低（大约低10%左右），发送单个消息的RT会略高，且目前版本在主节点宕机后，备机不能自动切换为主机。</li></ul><h2 id="_3-3-双主双从集群搭建" tabindex="-1"><a class="header-anchor" href="#_3-3-双主双从集群搭建" aria-hidden="true">#</a> 3.3 双主双从集群搭建</h2><h3 id="_3-3-1-总体架构" tabindex="-1"><a class="header-anchor" href="#_3-3-1-总体架构" aria-hidden="true">#</a> 3.3.1 总体架构</h3><p>消息高可用采用2m-2s（同步双写）方式</p><p><img src="'+b+`" alt=""></p><h3 id="_3-3-2-集群工作流程" tabindex="-1"><a class="header-anchor" href="#_3-3-2-集群工作流程" aria-hidden="true">#</a> 3.3.2 集群工作流程</h3><ol><li>启动NameServer，NameServer起来后监听端口，等待Broker、Producer、Consumer连上来，相当于一个路由控制中心。</li><li>Broker启动，跟所有的NameServer保持长连接，定时发送心跳包。心跳包中包含当前Broker信息(IP+端口等)以及存储所有Topic信息。注册成功后，NameServer集群中就有Topic跟Broker的映射关系。</li><li>收发消息前，先创建Topic，创建Topic时需要指定该Topic要存储在哪些Broker上，也可以在发送消息时自动创建Topic。</li><li>Producer发送消息，启动时先跟NameServer集群中的其中一台建立长连接，并从NameServer中获取当前发送的Topic存在哪些Broker上，轮询从队列列表中选择一个队列，然后与队列所在的Broker建立长连接从而向Broker发消息。</li><li>Consumer跟Producer类似，跟其中一台NameServer建立长连接，获取当前订阅Topic存在哪些Broker上，然后直接跟Broker建立连接通道，开始消费消息。</li></ol><h3 id="_3-3-3-服务器环境" tabindex="-1"><a class="header-anchor" href="#_3-3-3-服务器环境" aria-hidden="true">#</a> 3.3.3 服务器环境</h3><table><thead><tr><th><strong>序号</strong></th><th><strong>IP</strong></th><th><strong>角色</strong></th><th><strong>架构模式</strong></th></tr></thead><tbody><tr><td>1</td><td>192.168.25.135</td><td>nameserver、brokerserver</td><td>Master1、Slave2</td></tr><tr><td>2</td><td>192.168.25.138</td><td>nameserver、brokerserver</td><td>Master2、Slave1</td></tr></tbody></table><h3 id="_3-3-4-host添加信息" tabindex="-1"><a class="header-anchor" href="#_3-3-4-host添加信息" aria-hidden="true">#</a> 3.3.4 Host添加信息</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">vim</span> /etc/hosts
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>配置如下:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># nameserver</span>
<span class="token number">192.168</span>.3.36 rocketmq-nameserver1
<span class="token number">192.168</span>.3.37 rocketmq-nameserver2
<span class="token comment"># broker</span>
<span class="token number">192.168</span>.3.201 rocketmq-master1
<span class="token number">192.168</span>.3.201 rocketmq-slave2
<span class="token number">192.168</span>.3.37 rocketmq-master2
<span class="token number">192.168</span>.3.37 rocketmq-slave1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>配置完成后, 重启网卡</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemctl restart network
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_3-3-5-防火墙配置" tabindex="-1"><a class="header-anchor" href="#_3-3-5-防火墙配置" aria-hidden="true">#</a> 3.3.5 防火墙配置</h3><p>宿主机需要远程访问虚拟机的rocketmq服务和web服务，需要开放相关的端口号，简单粗暴的方式是直接关闭防火墙</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 关闭防火墙</span>
systemctl stop firewalld.service 
<span class="token comment"># 查看防火墙的状态</span>
firewall-cmd <span class="token parameter variable">--state</span> 
<span class="token comment"># 禁止firewall开机启动</span>
systemctl disable firewalld.service
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>或者为了安全，只开放特定的端口号，RocketMQ默认使用3个端口：9876 、10911 、11011 。如果防火墙没有关闭的话，那么防火墙就必须开放这些端口：</p><ul><li><code>nameserver</code> 默认使用 9876 端口</li><li><code>master</code> 默认使用 10911 端口</li><li><code>slave</code> 默认使用11011 端口</li></ul><p>执行以下命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 开放name server默认端口</span>
firewall-cmd --remove-port<span class="token operator">=</span><span class="token number">9876</span>/tcp <span class="token parameter variable">--permanent</span>
<span class="token comment"># 开放master默认端口</span>
firewall-cmd --remove-port<span class="token operator">=</span><span class="token number">10911</span>/tcp <span class="token parameter variable">--permanent</span>
<span class="token comment"># 开放slave默认端口 (当前集群模式可不开启)</span>
firewall-cmd --remove-port<span class="token operator">=</span><span class="token number">11011</span>/tcp <span class="token parameter variable">--permanent</span> 
<span class="token comment"># 重启防火墙</span>
firewall-cmd <span class="token parameter variable">--reload</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-3-6-环境变量配置" tabindex="-1"><a class="header-anchor" href="#_3-3-6-环境变量配置" aria-hidden="true">#</a> 3.3.6 环境变量配置</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">vim</span> /etc/profile
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在profile文件的末尾加入如下命令</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#set rocketmq</span>
<span class="token assign-left variable">ROCKETMQ_HOME</span><span class="token operator">=</span>/install/soft/rocketmq/rocketmq-all-4.8.0-bin-release
<span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$PATH</span><span class="token builtin class-name">:</span><span class="token variable">$ROCKETMQ_HOME</span>/bin
<span class="token builtin class-name">export</span> ROCKETMQ_HOME <span class="token environment constant">PATH</span>


/soft/mq/rocketmq
/soft/mq/rocketmq


<span class="token assign-left variable">ROCKETMQ_HOME</span><span class="token operator">=</span>/soft/mq/rocketmq
<span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$PATH</span><span class="token builtin class-name">:</span><span class="token variable">$ROCKETMQ_HOME</span>/bin
<span class="token builtin class-name">export</span> ROCKETMQ_HOME <span class="token environment constant">PATH</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输入:wq! 保存并退出， 并使得配置立刻生效：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">source</span> /etc/profile


<span class="token number">37</span>
<span class="token comment">#set rocketmq</span>
<span class="token assign-left variable">ROCKETMQ_HOME</span><span class="token operator">=</span>/opt/rocketmq/rocketmq-4.8.0-bin
<span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$PATH</span><span class="token builtin class-name">:</span><span class="token variable">$ROCKETMQ_HOME</span>/bin
<span class="token builtin class-name">export</span> ROCKETMQ_HOME <span class="token environment constant">PATH</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-3-7-创建消息存储路径" tabindex="-1"><a class="header-anchor" href="#_3-3-7-创建消息存储路径" aria-hidden="true">#</a> 3.3.7 创建消息存储路径</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> /usr/local/rocketmq/store
<span class="token function">mkdir</span> /usr/local/rocketmq/store/commitlog
<span class="token function">mkdir</span> /usr/local/rocketmq/store/consumequeue
<span class="token function">mkdir</span> /usr/local/rocketmq/store/index
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-3-8-broker配置文件" tabindex="-1"><a class="header-anchor" href="#_3-3-8-broker配置文件" aria-hidden="true">#</a> 3.3.8 broker配置文件</h3><h4 id="_1-master1" tabindex="-1"><a class="header-anchor" href="#_1-master1" aria-hidden="true">#</a> 1）master1</h4><p>服务器：192.168.3.37</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">vi</span> /opt/rocketmq/rocketmq-4.8.0-bin/conf/2m-2s-sync/broker-a.properties
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>修改配置如下：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#所属集群名字</span>
<span class="token assign-left variable">brokerClusterName</span><span class="token operator">=</span>rocketmq-cluster
<span class="token comment">#broker名字，注意此处不同的配置文件填写的不一样</span>
<span class="token assign-left variable">brokerName</span><span class="token operator">=</span>broker-a
<span class="token comment">#0 表示 Master，&gt;0 表示 Slave</span>
<span class="token assign-left variable">brokerId</span><span class="token operator">=</span><span class="token number">0</span>
<span class="token comment">#nameServer地址，分号分割</span>
<span class="token assign-left variable">namesrvAddr</span><span class="token operator">=</span>rocketmq-nameserver1:9876
<span class="token comment">#在发送消息时，自动创建服务器不存在的topic，默认创建的队列数</span>
<span class="token assign-left variable">defaultTopicQueueNums</span><span class="token operator">=</span><span class="token number">4</span>
<span class="token comment">#是否允许 Broker 自动创建Topic，建议线下开启，线上关闭</span>
<span class="token assign-left variable">autoCreateTopicEnable</span><span class="token operator">=</span>true
<span class="token comment">#是否允许 Broker 自动创建订阅组，建议线下开启，线上关闭</span>
<span class="token assign-left variable">autoCreateSubscriptionGroup</span><span class="token operator">=</span>true
<span class="token comment">#Broker 对外服务的监听端口</span>
<span class="token assign-left variable">listenPort</span><span class="token operator">=</span><span class="token number">10911</span>
<span class="token comment">#删除文件时间点，默认凌晨 4点</span>
<span class="token assign-left variable">deleteWhen</span><span class="token operator">=</span>04
<span class="token comment">#文件保留时间，默认 48 小时</span>
<span class="token assign-left variable">fileReservedTime</span><span class="token operator">=</span><span class="token number">120</span>
<span class="token comment">#commitLog每个文件的大小默认1G</span>
<span class="token assign-left variable">mapedFileSizeCommitLog</span><span class="token operator">=</span><span class="token number">1073741824</span>
<span class="token comment">#ConsumeQueue每个文件默认存30W条，根据业务情况调整</span>
<span class="token assign-left variable">mapedFileSizeConsumeQueue</span><span class="token operator">=</span><span class="token number">300000</span>
<span class="token comment">#destroyMapedFileIntervalForcibly=120000</span>
<span class="token comment">#redeleteHangedFileInterval=120000</span>
<span class="token comment">#检测物理文件磁盘空间</span>
<span class="token assign-left variable">diskMaxUsedSpaceRatio</span><span class="token operator">=</span><span class="token number">88</span>
<span class="token comment">#存储路径</span>
<span class="token assign-left variable">storePathRootDir</span><span class="token operator">=</span>/soft/mq/rocketmq/store
<span class="token comment">#commitLog 存储路径</span>
<span class="token assign-left variable">storePathCommitLog</span><span class="token operator">=</span>/soft/mq/rocketmq/store/commitlog
<span class="token comment">#消费队列存储路径存储路径</span>
<span class="token assign-left variable">storePathConsumeQueue</span><span class="token operator">=</span>/soft/mq/rocketmq/store/comsumequeue
<span class="token comment">#消息索引存储路径</span>
<span class="token assign-left variable">storePathIndex</span><span class="token operator">=</span>/soft/mq/rocketmq/store/index
<span class="token comment">#checkpoint 文件存储路径</span>
<span class="token assign-left variable">storeCheckpoint</span><span class="token operator">=</span>/soft/mq/rocketmq/store/checkpoint
<span class="token comment">#abort 文件存储路径</span>
<span class="token assign-left variable">abortFile</span><span class="token operator">=</span>/soft/mq/rocketmq/store/abort
<span class="token comment">#限制的消息大小</span>
<span class="token assign-left variable">maxMessageSize</span><span class="token operator">=</span><span class="token number">65536</span>
<span class="token comment">#flushCommitLogLeastPages=4</span>
<span class="token comment">#flushConsumeQueueLeastPages=2</span>
<span class="token comment">#flushCommitLogThoroughInterval=10000</span>
<span class="token comment">#flushConsumeQueueThoroughInterval=60000</span>
<span class="token comment">#Broker 的角色</span>
<span class="token comment">#- ASYNC_MASTER 异步复制Master</span>
<span class="token comment">#- SYNC_MASTER 同步双写Master</span>
<span class="token comment">#- SLAVE</span>
<span class="token assign-left variable">brokerRole</span><span class="token operator">=</span>SYNC_MASTER
<span class="token comment">#刷盘方式</span>
<span class="token comment">#- ASYNC_FLUSH 异步刷盘</span>
<span class="token comment">#- SYNC_FLUSH 同步刷盘</span>
<span class="token assign-left variable">flushDiskType</span><span class="token operator">=</span>SYNC_FLUSH
<span class="token comment">#checkTransactionMessageEnable=false</span>
<span class="token comment">#发消息线程池数量</span>
<span class="token comment">#sendMessageThreadPoolNums=128</span>
<span class="token comment">#拉消息线程池数量</span>
<span class="token comment">#pullMessageThreadPoolNums=128</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-slave2" tabindex="-1"><a class="header-anchor" href="#_2-slave2" aria-hidden="true">#</a> 2）slave2</h4><p>服务器：192.168.3.37</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">vi</span> /opt/rocketmq/rocketmq-4.8.0-bin/conf/2m-2s-sync/broker-b-s.properties
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>修改配置如下：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#所属集群名字</span>
<span class="token assign-left variable">brokerClusterName</span><span class="token operator">=</span>rocketmq-cluster
<span class="token comment">#broker名字，注意此处不同的配置文件填写的不一样</span>
<span class="token assign-left variable">brokerName</span><span class="token operator">=</span>broker-b
<span class="token comment">#0 表示 Master，&gt;0 表示 Slave</span>
<span class="token assign-left variable">brokerId</span><span class="token operator">=</span><span class="token number">1</span>
<span class="token comment">#nameServer地址，分号分割</span>
<span class="token assign-left variable">namesrvAddr</span><span class="token operator">=</span>rocketmq-nameserver1:9876<span class="token punctuation">;</span>rocketmq-nameserver2:9876
<span class="token comment">#在发送消息时，自动创建服务器不存在的topic，默认创建的队列数</span>
<span class="token assign-left variable">defaultTopicQueueNums</span><span class="token operator">=</span><span class="token number">4</span>
<span class="token comment">#是否允许 Broker 自动创建Topic，建议线下开启，线上关闭</span>
<span class="token assign-left variable">autoCreateTopicEnable</span><span class="token operator">=</span>true
<span class="token comment">#是否允许 Broker 自动创建订阅组，建议线下开启，线上关闭</span>
<span class="token assign-left variable">autoCreateSubscriptionGroup</span><span class="token operator">=</span>true
<span class="token comment">#Broker 对外服务的监听端口</span>
<span class="token assign-left variable">listenPort</span><span class="token operator">=</span><span class="token number">11011</span>
<span class="token comment">#删除文件时间点，默认凌晨 4点</span>
<span class="token assign-left variable">deleteWhen</span><span class="token operator">=</span>04
<span class="token comment">#文件保留时间，默认 48 小时</span>
<span class="token assign-left variable">fileReservedTime</span><span class="token operator">=</span><span class="token number">120</span>
<span class="token comment">#commitLog每个文件的大小默认1G</span>
<span class="token assign-left variable">mapedFileSizeCommitLog</span><span class="token operator">=</span><span class="token number">1073741824</span>
<span class="token comment">#ConsumeQueue每个文件默认存30W条，根据业务情况调整</span>
<span class="token assign-left variable">mapedFileSizeConsumeQueue</span><span class="token operator">=</span><span class="token number">300000</span>
<span class="token comment">#destroyMapedFileIntervalForcibly=120000</span>
<span class="token comment">#redeleteHangedFileInterval=120000</span>
<span class="token comment">#检测物理文件磁盘空间</span>
<span class="token assign-left variable">diskMaxUsedSpaceRatio</span><span class="token operator">=</span><span class="token number">88</span>
<span class="token comment">#存储路径</span>
<span class="token assign-left variable">storePathRootDir</span><span class="token operator">=</span>/opt/rocketmq/message2
<span class="token comment">#commitLog 存储路径</span>
<span class="token assign-left variable">storePathCommitLog</span><span class="token operator">=</span>/opt/rocketmq/message2/commitlog
<span class="token comment">#消费队列存储路径存储路径</span>
<span class="token assign-left variable">storePathConsumeQueue</span><span class="token operator">=</span>/opt/rocketmq/message2/consumequeue
<span class="token comment">#消息索引存储路径</span>
<span class="token assign-left variable">storePathIndex</span><span class="token operator">=</span>/opt/rocketmq/message2/index
<span class="token comment">#checkpoint 文件存储路径</span>
<span class="token assign-left variable">storeCheckpoint</span><span class="token operator">=</span>/opt/rocketmq/message2/checkpoint
<span class="token comment">#abort 文件存储路径</span>
<span class="token assign-left variable">abortFile</span><span class="token operator">=</span>/opt/rocketmq/message2/abort
<span class="token comment">#限制的消息大小</span>
<span class="token assign-left variable">maxMessageSize</span><span class="token operator">=</span><span class="token number">65536</span>
<span class="token comment">#flushCommitLogLeastPages=4</span>
<span class="token comment">#flushConsumeQueueLeastPages=2</span>
<span class="token comment">#flushCommitLogThoroughInterval=10000</span>
<span class="token comment">#flushConsumeQueueThoroughInterval=60000</span>
<span class="token comment">#Broker 的角色</span>
<span class="token comment">#- ASYNC_MASTER 异步复制Master</span>
<span class="token comment">#- SYNC_MASTER 同步双写Master</span>
<span class="token comment">#- SLAVE</span>
<span class="token assign-left variable">brokerRole</span><span class="token operator">=</span>SLAVE
<span class="token comment">#刷盘方式</span>
<span class="token comment">#- ASYNC_FLUSH 异步刷盘</span>
<span class="token comment">#- SYNC_FLUSH 同步刷盘</span>
<span class="token assign-left variable">flushDiskType</span><span class="token operator">=</span>ASYNC_FLUSH
<span class="token comment">#checkTransactionMessageEnable=false</span>
<span class="token comment">#发消息线程池数量</span>
<span class="token comment">#sendMessageThreadPoolNums=128</span>
<span class="token comment">#拉消息线程池数量</span>
<span class="token comment">#pullMessageThreadPoolNums=128</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-master2" tabindex="-1"><a class="header-anchor" href="#_3-master2" aria-hidden="true">#</a> 3）master2</h4><p>服务器：192.168.3.201</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">vi</span> /usr/soft/rocketmq/conf/2m-2s-sync/broker-b.properties
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>修改配置如下：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#所属集群名字</span>
<span class="token assign-left variable">brokerClusterName</span><span class="token operator">=</span>rocketmq-cluster
<span class="token comment">#broker名字，注意此处不同的配置文件填写的不一样</span>
<span class="token assign-left variable">brokerName</span><span class="token operator">=</span>broker-b
<span class="token comment">#0 表示 Master，&gt;0 表示 Slave</span>
<span class="token assign-left variable">brokerId</span><span class="token operator">=</span><span class="token number">0</span>
<span class="token comment">#nameServer地址，分号分割</span>
<span class="token assign-left variable">namesrvAddr</span><span class="token operator">=</span>rocketmq-nameserver1:9876<span class="token punctuation">;</span>rocketmq-nameserver2:9876
<span class="token comment">#在发送消息时，自动创建服务器不存在的topic，默认创建的队列数</span>
<span class="token assign-left variable">defaultTopicQueueNums</span><span class="token operator">=</span><span class="token number">4</span>
<span class="token comment">#是否允许 Broker 自动创建Topic，建议线下开启，线上关闭</span>
<span class="token assign-left variable">autoCreateTopicEnable</span><span class="token operator">=</span>true
<span class="token comment">#是否允许 Broker 自动创建订阅组，建议线下开启，线上关闭</span>
<span class="token assign-left variable">autoCreateSubscriptionGroup</span><span class="token operator">=</span>true
<span class="token comment">#Broker 对外服务的监听端口</span>
<span class="token assign-left variable">listenPort</span><span class="token operator">=</span><span class="token number">10911</span>
<span class="token comment">#删除文件时间点，默认凌晨 4点</span>
<span class="token assign-left variable">deleteWhen</span><span class="token operator">=</span>04
<span class="token comment">#文件保留时间，默认 48 小时</span>
<span class="token assign-left variable">fileReservedTime</span><span class="token operator">=</span><span class="token number">120</span>
<span class="token comment">#commitLog每个文件的大小默认1G</span>
<span class="token assign-left variable">mapedFileSizeCommitLog</span><span class="token operator">=</span><span class="token number">1073741824</span>
<span class="token comment">#ConsumeQueue每个文件默认存30W条，根据业务情况调整</span>
<span class="token assign-left variable">mapedFileSizeConsumeQueue</span><span class="token operator">=</span><span class="token number">300000</span>
<span class="token comment">#destroyMapedFileIntervalForcibly=120000</span>
<span class="token comment">#redeleteHangedFileInterval=120000</span>
<span class="token comment">#检测物理文件磁盘空间</span>
<span class="token assign-left variable">diskMaxUsedSpaceRatio</span><span class="token operator">=</span><span class="token number">88</span>
<span class="token comment">#存储路径</span>
<span class="token assign-left variable">storePathRootDir</span><span class="token operator">=</span>/install/soft/rocketmq/message
<span class="token comment">#commitLog 存储路径</span>
<span class="token assign-left variable">storePathCommitLog</span><span class="token operator">=</span>/install/soft/rocketmq/message/commitlog
<span class="token comment">#消费队列存储路径存储路径</span>
<span class="token assign-left variable">storePathConsumeQueue</span><span class="token operator">=</span>/install/soft/rocketmq/message/consumequeue
<span class="token comment">#消息索引存储路径</span>
<span class="token assign-left variable">storePathIndex</span><span class="token operator">=</span>/install/soft/rocketmq/message/index
<span class="token comment">#checkpoint 文件存储路径</span>
<span class="token assign-left variable">storeCheckpoint</span><span class="token operator">=</span>/install/soft/rocketmq/message/checkpoint
<span class="token comment">#abort 文件存储路径</span>
<span class="token assign-left variable">abortFile</span><span class="token operator">=</span>/install/soft/rocketmq/message/abort
<span class="token comment">#限制的消息大小</span>
<span class="token assign-left variable">maxMessageSize</span><span class="token operator">=</span><span class="token number">65536</span>
<span class="token comment">#flushCommitLogLeastPages=4</span>
<span class="token comment">#flushConsumeQueueLeastPages=2</span>
<span class="token comment">#flushCommitLogThoroughInterval=10000</span>
<span class="token comment">#flushConsumeQueueThoroughInterval=60000</span>
<span class="token comment">#Broker 的角色</span>
<span class="token comment">#- ASYNC_MASTER 异步复制Master</span>
<span class="token comment">#- SYNC_MASTER 同步双写Master</span>
<span class="token comment">#- SLAVE</span>
<span class="token assign-left variable">brokerRole</span><span class="token operator">=</span>SYNC_MASTER
<span class="token comment">#刷盘方式</span>
<span class="token comment">#- ASYNC_FLUSH 异步刷盘</span>
<span class="token comment">#- SYNC_FLUSH 同步刷盘</span>
<span class="token assign-left variable">flushDiskType</span><span class="token operator">=</span>SYNC_FLUSH
<span class="token comment">#checkTransactionMessageEnable=false</span>
<span class="token comment">#发消息线程池数量</span>
<span class="token comment">#sendMessageThreadPoolNums=128</span>
<span class="token comment">#拉消息线程池数量</span>
<span class="token comment">#pullMessageThreadPoolNums=128</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-slave1" tabindex="-1"><a class="header-anchor" href="#_4-slave1" aria-hidden="true">#</a> 4）slave1</h4><p>服务器：192.168.3.201</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">vi</span> /usr/soft/rocketmq/conf/2m-2s-sync/broker-a-s.properties
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>修改配置如下：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#所属集群名字</span>
<span class="token assign-left variable">brokerClusterName</span><span class="token operator">=</span>rocketmq-cluster
<span class="token comment">#broker名字，注意此处不同的配置文件填写的不一样</span>
<span class="token assign-left variable">brokerName</span><span class="token operator">=</span>broker-a
<span class="token comment">#0 表示 Master，&gt;0 表示 Slave</span>
<span class="token assign-left variable">brokerId</span><span class="token operator">=</span><span class="token number">1</span>
<span class="token comment">#nameServer地址，分号分割</span>
<span class="token assign-left variable">namesrvAddr</span><span class="token operator">=</span>rocketmq-nameserver1:9876<span class="token punctuation">;</span>rocketmq-nameserver2:9876
<span class="token comment">#在发送消息时，自动创建服务器不存在的topic，默认创建的队列数</span>
<span class="token assign-left variable">defaultTopicQueueNums</span><span class="token operator">=</span><span class="token number">4</span>
<span class="token comment">#是否允许 Broker 自动创建Topic，建议线下开启，线上关闭</span>
<span class="token assign-left variable">autoCreateTopicEnable</span><span class="token operator">=</span>true
<span class="token comment">#是否允许 Broker 自动创建订阅组，建议线下开启，线上关闭</span>
<span class="token assign-left variable">autoCreateSubscriptionGroup</span><span class="token operator">=</span>true
<span class="token comment">#Broker 对外服务的监听端口</span>
<span class="token assign-left variable">listenPort</span><span class="token operator">=</span><span class="token number">11011</span>
<span class="token comment">#删除文件时间点，默认凌晨 4点</span>
<span class="token assign-left variable">deleteWhen</span><span class="token operator">=</span>04
<span class="token comment">#文件保留时间，默认 48 小时</span>
<span class="token assign-left variable">fileReservedTime</span><span class="token operator">=</span><span class="token number">120</span>
<span class="token comment">#commitLog每个文件的大小默认1G</span>
<span class="token assign-left variable">mapedFileSizeCommitLog</span><span class="token operator">=</span><span class="token number">1073741824</span>
<span class="token comment">#ConsumeQueue每个文件默认存30W条，根据业务情况调整</span>
<span class="token assign-left variable">mapedFileSizeConsumeQueue</span><span class="token operator">=</span><span class="token number">300000</span>
<span class="token comment">#destroyMapedFileIntervalForcibly=120000</span>
<span class="token comment">#redeleteHangedFileInterval=120000</span>
<span class="token comment">#检测物理文件磁盘空间</span>
<span class="token assign-left variable">diskMaxUsedSpaceRatio</span><span class="token operator">=</span><span class="token number">88</span>
<span class="token comment">#存储路径</span>
<span class="token assign-left variable">storePathRootDir</span><span class="token operator">=</span>/install/soft/rocketmq/message2
<span class="token comment">#commitLog 存储路径</span>
<span class="token assign-left variable">storePathCommitLog</span><span class="token operator">=</span>/install/soft/rocketmq/message2/commitlog
<span class="token comment">#消费队列存储路径存储路径</span>
<span class="token assign-left variable">storePathConsumeQueue</span><span class="token operator">=</span>/install/soft/rocketmq/message2/consumequeue
<span class="token comment">#消息索引存储路径</span>
<span class="token assign-left variable">storePathIndex</span><span class="token operator">=</span>/install/soft/rocketmq/message2/index
<span class="token comment">#checkpoint 文件存储路径</span>
<span class="token assign-left variable">storeCheckpoint</span><span class="token operator">=</span>/install/soft/rocketmq/message2/checkpoint
<span class="token comment">#abort 文件存储路径</span>
<span class="token assign-left variable">abortFile</span><span class="token operator">=</span>/install/soft/rocketmq/message2/abort
<span class="token comment">#限制的消息大小</span>
<span class="token assign-left variable">maxMessageSize</span><span class="token operator">=</span><span class="token number">65536</span>
<span class="token comment">#flushCommitLogLeastPages=4</span>
<span class="token comment">#flushConsumeQueueLeastPages=2</span>
<span class="token comment">#flushCommitLogThoroughInterval=10000</span>
<span class="token comment">#flushConsumeQueueThoroughInterval=60000</span>
<span class="token comment">#Broker 的角色</span>
<span class="token comment">#- ASYNC_MASTER 异步复制Master</span>
<span class="token comment">#- SYNC_MASTER 同步双写Master</span>
<span class="token comment">#- SLAVE</span>
<span class="token assign-left variable">brokerRole</span><span class="token operator">=</span>SLAVE
<span class="token comment">#刷盘方式</span>
<span class="token comment">#- ASYNC_FLUSH 异步刷盘</span>
<span class="token comment">#- SYNC_FLUSH 同步刷盘</span>
<span class="token assign-left variable">flushDiskType</span><span class="token operator">=</span>ASYNC_FLUSH
<span class="token comment">#checkTransactionMessageEnable=false</span>
<span class="token comment">#发消息线程池数量</span>
<span class="token comment">#sendMessageThreadPoolNums=128</span>
<span class="token comment">#拉消息线程池数量</span>
<span class="token comment">#pullMessageThreadPoolNums=128</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-3-9-修改启动脚本文件" tabindex="-1"><a class="header-anchor" href="#_3-3-9-修改启动脚本文件" aria-hidden="true">#</a> 3.3.9 修改启动脚本文件</h3><h4 id="_1-runbroker-sh" tabindex="-1"><a class="header-anchor" href="#_1-runbroker-sh" aria-hidden="true">#</a> 1）runbroker.sh</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">vi</span> /usr/local/rocketmq/bin/runbroker.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>需要根据内存大小进行适当的对JVM参数进行调整：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#===================================================</span>
<span class="token comment"># 开发环境配置 JVM Configuration</span>
<span class="token assign-left variable">JAVA_OPT</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable">\${JAVA_OPT}</span> -server -Xms256m -Xmx256m -Xmn128m&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>####2）runserver.sh</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">vim</span> /usr/local/rocketmq/bin/runserver.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token assign-left variable">JAVA_OPT</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable">\${JAVA_OPT}</span> -server -Xms256m -Xmx256m -Xmn128m -XX:MetaspaceSize=128m -XX:MaxMetaspaceSize=320m&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_3-3-10-服务启动" tabindex="-1"><a class="header-anchor" href="#_3-3-10-服务启动" aria-hidden="true">#</a> 3.3.10 服务启动</h3><h4 id="_1-启动nameserve集群" tabindex="-1"><a class="header-anchor" href="#_1-启动nameserve集群" aria-hidden="true">#</a> 1）启动NameServe集群</h4><p>分别在192.168.3.37和192.168.3.201启动NameServer</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> /usr/local/rocketmq/bin
<span class="token function">nohup</span> <span class="token function">sh</span> mqnamesrv <span class="token operator">&amp;</span>

/install/soft/rocketmq/rocketmq-all-4.8.0-bin-release/conf/2m-2s-sync
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-启动broker集群" tabindex="-1"><a class="header-anchor" href="#_2-启动broker集群" aria-hidden="true">#</a> 2）启动Broker集群</h4><ul><li>在192.168.3.37上启动master1和slave2</li></ul><p>master1：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> /usr/local/rocketmq/bin
<span class="token function">nohup</span> <span class="token function">sh</span> mqbroker <span class="token parameter variable">-c</span> /opt/rocketmq/rocketmq-4.8.0-bin/conf/2m-2s-sync/broker-a.properties <span class="token operator">&amp;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>slave2：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> /usr/local/rocketmq/bin
<span class="token function">nohup</span> <span class="token function">sh</span> mqbroker <span class="token parameter variable">-c</span> /opt/rocketmq/rocketmq-4.8.0-bin/conf/2m-2s-sync/broker-b-s.properties <span class="token operator">&amp;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>在192.168.3.201上启动master2和slave2</li></ul><p>master2</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> /usr/local/rocketmq/bin
<span class="token function">nohup</span> <span class="token function">sh</span> mqbroker <span class="token parameter variable">-c</span> /install/soft/rocketmq/rocketmq-all-4.8.0-bin-release/conf/2m-2s-sync/broker-b.properties <span class="token operator">&amp;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>slave1</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> /usr/local/rocketmq/bin
<span class="token function">nohup</span> <span class="token function">sh</span> mqbroker <span class="token parameter variable">-c</span> /install/soft/rocketmq/rocketmq-all-4.8.0-bin-release/conf/2m-2s-sync/broker-a-s.properties <span class="token operator">&amp;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-3-11-查看进程状态" tabindex="-1"><a class="header-anchor" href="#_3-3-11-查看进程状态" aria-hidden="true">#</a> 3.3.11 查看进程状态</h3><p>启动后通过JPS查看启动进程</p><p><img src="`+w+`" alt=""></p><h3 id="_3-3-12-查看日志" tabindex="-1"><a class="header-anchor" href="#_3-3-12-查看日志" aria-hidden="true">#</a> 3.3.12 查看日志</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 查看nameServer日志</span>
<span class="token function">tail</span> <span class="token parameter variable">-500f</span> ~/logs/rocketmqlogs/namesrv.log
<span class="token comment"># 查看broker日志</span>
<span class="token function">tail</span> <span class="token parameter variable">-500f</span> ~/logs/rocketmqlogs/broker.log
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-4-mqadmin管理工具" tabindex="-1"><a class="header-anchor" href="#_3-4-mqadmin管理工具" aria-hidden="true">#</a> 3.4 mqadmin管理工具</h2><h3 id="_3-4-1-使用方式" tabindex="-1"><a class="header-anchor" href="#_3-4-1-使用方式" aria-hidden="true">#</a> 3.4.1 使用方式</h3><p>进入RocketMQ安装位置，在bin目录下执行<code>./mqadmin {command} {args}</code></p><p>###3.4.2 命令介绍</p><p>####1）Topic相关</p>`,126),C=s("table",{border:"0",cellpadding:"0",cellspacing:"0",width:"714"},[s("col",{width:"177"}),s("col",{width:"175"}),s("col",{width:"177"}),s("col",{width:"185"}),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl63",width:"177",style:{height:"17.0pt",width:"133pt"}},"名称"),s("td",{class:"xl64",width:"175",style:{width:"131pt"}},"含义"),s("td",{class:"xl64",width:"177",style:{width:"133pt"}},"命令选项"),s("td",{class:"xl64",width:"185",style:{width:"139pt"}},"说明")]),s("tr",{height:"132",style:{height:"99.0pt"}},[s("td",{rowspan:"8",height:"593",class:"xl68",width:"163",style:{"border-bottom":"1.0pt",height:"444.0pt","border-top":"none",width:"122pt"}},"updateTopic"),s("td",{rowspan:"8",class:"xl70",width:"135",style:{"border-bottom":"1.0pt","border-top":"none",width:"101pt"}},"创建更新Topic配置"),s("td",{class:"xl65",width:"149",style:{width:"112pt"}},"-b"),s("td",{class:"xl66",width:"159",style:{width:"119pt"}},"Broker 地址，表示 topic 所在 Broker，只支持单台Broker，地址为ip:port")]),s("tr",{height:"132",style:{height:"99.0pt"}},[s("td",{height:"132",class:"xl65",width:"149",style:{height:"99.0pt",width:"112pt"}},"-c"),s("td",{class:"xl66",width:"159",style:{width:"119pt"}},"cluster 名称，表示 topic 所在集群（集群可通过 clusterList 查询）")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl65",width:"149",style:{height:"17.0pt",width:"112pt"}},"-h-"),s("td",{class:"xl66",width:"159",style:{width:"119pt"}},"打印帮助")]),s("tr",{height:"57",style:{height:"43.0pt"}},[s("td",{height:"57",class:"xl65",width:"149",style:{height:"43.0pt",width:"112pt"}},"-n"),s("td",{class:"xl66",width:"159",style:{width:"119pt"}},"NameServer服务地址，格式 ip:port")]),s("tr",{height:"76",style:{height:"57.0pt"}},[s("td",{height:"76",class:"xl65",width:"149",style:{height:"57.0pt",width:"112pt"}},"-p"),s("td",{class:"xl66",width:"159",style:{width:"119pt"}},"指定新topic的读写权限( W=2|R=4|WR=6 )")]),s("tr",{height:"39",style:{height:"29.0pt"}},[s("td",{height:"39",class:"xl65",width:"149",style:{height:"29.0pt",width:"112pt"}},"-r"),s("td",{class:"xl66",width:"159",style:{width:"119pt"}},"可读队列数（默认为 8）")]),s("tr",{height:"39",style:{height:"29.0pt"}},[s("td",{height:"39",class:"xl65",width:"149",style:{height:"29.0pt",width:"112pt"}},"-w"),s("td",{class:"xl66",width:"159",style:{width:"119pt"}},"可写队列数（默认为 8）")]),s("tr",{height:"95",style:{height:"71.0pt"}},[s("td",{height:"95",class:"xl65",width:"149",style:{height:"71.0pt",width:"112pt"}},"-t"),s("td",{class:"xl66",width:"159",style:{width:"119pt"}},"topic 名称（名称只能使用字符 ^[a-zA-Z0-9_-]+$ ）")]),s("tr",{height:"132",style:{height:"99.0pt"}},[s("td",{rowspan:"4",height:"307",class:"xl68",width:"163",style:{"border-bottom":"1.0pt",height:"230.0pt","border-top":"none",width:"122pt"}},"deleteTopic"),s("td",{rowspan:"4",class:"xl70",width:"135",style:{"border-bottom":"1.0pt","border-top":"none",width:"101pt"}},"删除Topic"),s("td",{class:"xl65",width:"149",style:{width:"112pt"}},"-c"),s("td",{class:"xl66",width:"159",style:{width:"119pt"}},"cluster 名称，表示删除某集群下的某个 topic （集群 可通过 clusterList 查询）")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl65",width:"149",style:{height:"17.0pt",width:"112pt"}},"-h"),s("td",{class:"xl66",width:"159",style:{width:"119pt"}},"打印帮助")]),s("tr",{height:"57",style:{height:"43.0pt"}},[s("td",{height:"57",class:"xl65",width:"149",style:{height:"43.0pt",width:"112pt"}},"-n"),s("td",{class:"xl66",width:"159",style:{width:"119pt"}},"NameServer 服务地址，格式 ip:port")]),s("tr",{height:"95",style:{height:"71.0pt"}},[s("td",{height:"95",class:"xl65",width:"149",style:{height:"71.0pt",width:"112pt"}},"-t"),s("td",{class:"xl66",width:"159",style:{width:"119pt"}},"topic 名称（名称只能使用字符 ^[a-zA-Z0-9_-]+$ ）")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{rowspan:"3",height:"287",class:"xl68",width:"163",style:{"border-bottom":"1.0pt",height:"215.0pt","border-top":"none",width:"122pt"}},"topicList"),s("td",{rowspan:"3",class:"xl70",width:"135",style:{"border-bottom":"1.0pt","border-top":"none",width:"101pt"}},"查看 Topic 列表信息"),s("td",{class:"xl65",width:"149",style:{width:"112pt"}},"-h"),s("td",{class:"xl66",width:"159",style:{width:"119pt"}},"打印帮助")]),s("tr",{height:"207",style:{height:"155.0pt"}},[s("td",{height:"207",class:"xl65",width:"149",style:{height:"155.0pt",width:"112pt"}},"-c"),s("td",{class:"xl66",width:"159",style:{width:"119pt"}},"不配置-c只返回topic列表，增加-c返回clusterName, topic, consumerGroup信息，即topic的所属集群和订阅关系，没有参数")]),s("tr",{height:"57",style:{height:"43.0pt"}},[s("td",{height:"57",class:"xl65",width:"149",style:{height:"43.0pt",width:"112pt"}},"-n"),s("td",{class:"xl66",width:"159",style:{width:"119pt"}},"NameServer 服务地址，格式 ip:port")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{rowspan:"3",height:"103",class:"xl68",width:"163",style:{"border-bottom":"1.0pt",height:"77.0pt","border-top":"none",width:"122pt"}},"topicRoute"),s("td",{rowspan:"3",class:"xl70",width:"135",style:{"border-bottom":"1.0pt","border-top":"none",width:"101pt"}},"查看 Topic 路由信息"),s("td",{class:"xl65",width:"149",style:{width:"112pt"}},"-t"),s("td",{class:"xl66",width:"159",style:{width:"119pt"}},"topic 名称")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl65",width:"149",style:{height:"17.0pt",width:"112pt"}},"-h"),s("td",{class:"xl66",width:"159",style:{width:"119pt"}},"打印帮助")]),s("tr",{height:"57",style:{height:"43.0pt"}},[s("td",{height:"57",class:"xl65",width:"149",style:{height:"43.0pt",width:"112pt"}},"-n"),s("td",{class:"xl66",width:"159",style:{width:"119pt"}},"NameServer 服务地址，格式 ip:port")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{rowspan:"3",height:"103",class:"xl68",width:"163",style:{"border-bottom":"1.0pt",height:"77.0pt","border-top":"none",width:"122pt"}},"topicStatus"),s("td",{rowspan:"3",class:"xl70",width:"135",style:{"border-bottom":"1.0pt","border-top":"none",width:"101pt"}},"查看 Topic 消息队列offset"),s("td",{class:"xl65",width:"149",style:{width:"112pt"}},"-t"),s("td",{class:"xl66",width:"159",style:{width:"119pt"}},"topic 名称")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl65",width:"149",style:{height:"17.0pt",width:"112pt"}},"-h"),s("td",{class:"xl66",width:"159",style:{width:"119pt"}},"打印帮助")]),s("tr",{height:"57",style:{height:"43.0pt"}},[s("td",{height:"57",class:"xl65",width:"149",style:{height:"43.0pt",width:"112pt"}},"-n"),s("td",{class:"xl66",width:"159",style:{width:"119pt"}},"NameServer 服务地址，格式 ip:port")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{rowspan:"3",height:"103",class:"xl68",width:"163",style:{"border-bottom":"1.0pt",height:"77.0pt","border-top":"none",width:"122pt"}},"topicClusterList"),s("td",{rowspan:"3",class:"xl70",width:"135",style:{"border-bottom":"1.0pt","border-top":"none",width:"101pt"}},"查看 Topic 所在集群列表"),s("td",{class:"xl65",width:"149",style:{width:"112pt"}},"-t"),s("td",{class:"xl66",width:"159",style:{width:"119pt"}},"topic 名称")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl65",width:"149",style:{height:"17.0pt",width:"112pt"}},"-h"),s("td",{class:"xl66",width:"159",style:{width:"119pt"}},"打印帮助")]),s("tr",{height:"57",style:{height:"43.0pt"}},[s("td",{height:"57",class:"xl65",width:"149",style:{height:"43.0pt",width:"112pt"}},"-n"),s("td",{class:"xl66",width:"159",style:{width:"119pt"}},"NameServer 服务地址，格式 ip:port")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{rowspan:"6",height:"518",class:"xl68",width:"163",style:{"border-bottom":"1.0pt",height:"380pt","border-top":"none",width:"122pt"}},"updateTopicPerm"),s("td",{rowspan:"6",class:"xl70",width:"135",style:{"border-bottom":"1.0pt","border-top":"none",width:"101pt"}},"更新 Topic 读写权限"),s("td",{class:"xl65",width:"149",style:{width:"112pt"}},"-t"),s("td",{class:"xl66",width:"159",style:{width:"119pt"}},"topic 名称")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl65",width:"149",style:{height:"17.0pt",width:"112pt"}},"-h"),s("td",{class:"xl66",width:"159",style:{width:"119pt"}},"打印帮助")]),s("tr",{height:"57",style:{height:"43.0pt"}},[s("td",{height:"57",class:"xl65",width:"149",style:{height:"43.0pt",width:"112pt"}},"-n"),s("td",{class:"xl66",width:"159",style:{width:"119pt"}},"NameServer 服务地址，格式 ip:port")]),s("tr",{height:"132",style:{height:"99.0pt"}},[s("td",{height:"132",class:"xl65",width:"149",style:{height:"99.0pt",width:"112pt"}},"-b"),s("td",{class:"xl66",width:"159",style:{width:"119pt"}},"Broker 地址，表示 topic 所在 Broker，只支持单台Broker，地址为ip:port")]),s("tr",{height:"76",style:{height:"57.0pt"}},[s("td",{height:"76",class:"xl65",width:"149",style:{height:"57.0pt",width:"112pt"}},"-p"),s("td",{class:"xl66",width:"159",style:{width:"119pt"}},"指定新 topic 的读写权限( W=2|R=4|WR=6 )")]),s("tr",{height:"207",style:{height:"155.0pt"}},[s("td",{height:"207",class:"xl65",width:"149",style:{height:"155.0pt",width:"112pt"}},"-c"),s("td",{class:"xl66",width:"159",style:{width:"119pt"}},"cluster 名称，表示 topic 所在集群（集群可通过 clusterList 查询），-b优先，如果没有-b，则对集群中所有Broker执行命令")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{rowspan:"5",height:"199",class:"xl68",width:"163",style:{"border-bottom":"1.0pt",height:"149.0pt","border-top":"none",width:"122pt"}},"updateOrderConf"),s("td",{rowspan:"5",class:"xl70",width:"135",style:{"border-bottom":"1.0pt","border-top":"none",width:"101pt"}},"从NameServer上创建、删除、获取特定命名空间的kv配置，目前还未启用"),s("td",{class:"xl65",width:"149",style:{width:"112pt"}},"-h"),s("td",{class:"xl66",width:"159",style:{width:"119pt"}},"打印帮助")]),s("tr",{height:"57",style:{height:"43.0pt"}},[s("td",{height:"57",class:"xl65",width:"149",style:{height:"43.0pt",width:"112pt"}},"-n"),s("td",{class:"xl66",width:"159",style:{width:"119pt"}},"NameServer 服务地址，格式 ip:port")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl65",width:"149",style:{height:"17.0pt",width:"112pt"}},"-t"),s("td",{class:"xl66",width:"159",style:{width:"119pt"}},"topic，键")]),s("tr",{height:"39",style:{height:"29.0pt"}},[s("td",{height:"39",class:"xl65",width:"149",style:{height:"29.0pt",width:"112pt"}},"-v"),s("td",{class:"xl66",width:"159",style:{width:"119pt"}},"orderConf，值")]),s("tr",{height:"57",style:{height:"43.0pt"}},[s("td",{height:"57",class:"xl65",width:"149",style:{height:"43.0pt",width:"112pt"}},"-m"),s("td",{class:"xl66",width:"159",style:{width:"119pt"}},"method，可选get、put、delete")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{rowspan:"4",height:"198",class:"xl68",width:"163",style:{"border-bottom":"1.0pt",height:"140pt","border-top":"none",width:"122pt"}},"allocateMQ"),s("td",{rowspan:"4",class:"xl70",width:"135",style:{"border-bottom":"1.0pt","border-top":"none",width:"101pt"}},"以平均负载算法计算消费者列表负载消息队列的负载结果"),s("td",{class:"xl65",width:"149",style:{width:"112pt"}},"-t"),s("td",{class:"xl66",width:"159",style:{width:"119pt"}},"topic 名称")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl65",width:"149",style:{height:"17.0pt",width:"112pt"}},"-h"),s("td",{class:"xl66",width:"159",style:{width:"119pt"}},"打印帮助")]),s("tr",{height:"57",style:{height:"43.0pt"}},[s("td",{height:"57",class:"xl65",width:"149",style:{height:"43.0pt",width:"112pt"}},"-n"),s("td",{class:"xl66",width:"159",style:{width:"119pt"}},"NameServer 服务地址，格式 ip:port")]),s("tr",{height:"95",style:{height:"71.0pt"}},[s("td",{height:"95",class:"xl65",width:"149",style:{height:"71.0pt",width:"112pt"}},"-i"),s("td",{class:"xl66",width:"159",style:{width:"119pt"}},"ipList，用逗号分隔，计算这些ip去负载Topic的消息队列")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{rowspan:"4",height:"142",class:"xl68",width:"163",style:{"border-bottom":"1.0pt solid black",height:"106.0pt","border-top":"1.0pt",width:"122pt"}},"statsAll"),s("td",{rowspan:"4",class:"xl70",width:"135",style:{"border-bottom":"1.0pt","border-top":"none",width:"101pt"}},"打印Topic订阅关系、TPS、积累量、24h读写总量等信息"),s("td",{class:"xl65",width:"149",style:{width:"112pt"}},"-h"),s("td",{class:"xl66",width:"159",style:{width:"119pt"}},"打印帮助")]),s("tr",{height:"57",style:{height:"43.0pt"}},[s("td",{height:"57",class:"xl65",width:"149",style:{height:"43.0pt",width:"112pt"}},"-n"),s("td",{class:"xl66",width:"159",style:{width:"119pt"}},"NameServer 服务地址，格式 ip:port")]),s("tr",{height:"39",style:{height:"29.0pt"}},[s("td",{height:"39",class:"xl65",width:"149",style:{height:"29.0pt",width:"112pt"}},"-a"),s("td",{class:"xl66",width:"159",style:{width:"119pt"}},"是否只打印活跃topic")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl65",width:"149",style:{height:"17.0pt",width:"112pt"}},"-t"),s("td",{class:"xl66",width:"159",style:{width:"119pt"}},"指定topic")])],-1),N=s("p",null,"####2）集群相关",-1),L=s("table",{border:"0",cellpadding:"0",cellspacing:"0",width:"714"},[s("col",{width:"177"}),s("col",{width:"175"}),s("col",{width:"177"}),s("col",{width:"185"}),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl63",width:"177",style:{height:"17.0pt",width:"133pt"}},"名称"),s("td",{class:"xl64",width:"175",style:{width:"131pt"}},"含义"),s("td",{class:"xl64",width:"177",style:{width:"133pt"}},"命令选项"),s("td",{class:"xl64",width:"185",style:{width:"139pt"}},"说明")]),s("tr",{height:"207",style:{height:"155.0pt"}},[s("td",{rowspan:"4",height:"326",class:"xl67",width:"177",style:{"border-bottom":"1.0pt",height:"244.0pt","border-top":"none",width:"133pt"}},[s("span",{style:{"mso-spacerun":"yes"}}),n("clusterList")]),s("td",{rowspan:"4",class:"xl70",width:"175",style:{"border-bottom":"1.0pt","border-top":"none",width:"131pt"}},"查看集群信息，集群、BrokerName、BrokerId、TPS等信息"),s("td",{class:"xl65",width:"177",style:{width:"133pt"}},"-m"),s("td",{class:"xl66",width:"185",style:{width:"139pt"}},"打印更多信息 (增加打印出如下信息 #InTotalYest, #OutTotalYest, #InTotalToday ,#OutTotalToday)")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl65",width:"177",style:{height:"17.0pt",width:"133pt"}},"-h"),s("td",{class:"xl66",width:"185",style:{width:"139pt"}},"打印帮助")]),s("tr",{height:"57",style:{height:"43.0pt"}},[s("td",{height:"57",class:"xl65",width:"177",style:{height:"43.0pt",width:"133pt"}},"-n"),s("td",{class:"xl66",width:"185",style:{width:"139pt"}},"NameServer 服务地址，格式 ip:port")]),s("tr",{height:"39",style:{height:"29.0pt"}},[s("td",{height:"39",class:"xl65",width:"177",style:{height:"29.0pt",width:"133pt"}},"-i"),s("td",{class:"xl66",width:"185",style:{width:"139pt"}},"打印间隔，单位秒")]),s("tr",{height:"95",style:{height:"71.0pt"}},[s("td",{rowspan:"8",height:"391",class:"xl67",width:"177",style:{"border-bottom":"1.0pt",height:"292.0pt","border-top":"none",width:"133pt"}},"clusterRT"),s("td",{rowspan:"8",class:"xl70",width:"175",style:{"border-bottom":"1.0pt","border-top":"none",width:"131pt"}},"发送消息检测集群各Broker RT。消息发往${BrokerName} Topic。"),s("td",{class:"xl65",width:"177",style:{width:"133pt"}},"-a"),s("td",{class:"xl66",width:"185",style:{width:"139pt"}},"amount，每次探测的总数，RT = 总时间 / amount")]),s("tr",{height:"39",style:{height:"29.0pt"}},[s("td",{height:"39",class:"xl65",width:"177",style:{height:"29.0pt",width:"133pt"}},"-s"),s("td",{class:"xl66",width:"185",style:{width:"139pt"}},"消息大小，单位B")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl65",width:"177",style:{height:"17.0pt",width:"133pt"}},"-c"),s("td",{class:"xl66",width:"185",style:{width:"139pt"}},"探测哪个集群")]),s("tr",{height:"76",style:{height:"57.0pt"}},[s("td",{height:"76",class:"xl65",width:"177",style:{height:"57.0pt",width:"133pt"}},"-p"),s("td",{class:"xl66",width:"185",style:{width:"139pt"}},"是否打印格式化日志，以|分割，默认不打印")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl65",width:"177",style:{height:"17.0pt",width:"133pt"}},"-h"),s("td",{class:"xl66",width:"185",style:{width:"139pt"}},"打印帮助")]),s("tr",{height:"39",style:{height:"29.0pt"}},[s("td",{height:"39",class:"xl65",width:"177",style:{height:"29.0pt",width:"133pt"}},"-m"),s("td",{class:"xl66",width:"185",style:{width:"139pt"}},"所属机房，打印使用")]),s("tr",{height:"39",style:{height:"29.0pt"}},[s("td",{height:"39",class:"xl65",width:"177",style:{height:"29.0pt",width:"133pt"}},"-i"),s("td",{class:"xl66",width:"185",style:{width:"139pt"}},"发送间隔，单位秒")]),s("tr",{height:"57",style:{height:"43.0pt"}},[s("td",{height:"57",class:"xl65",width:"177",style:{height:"43.0pt",width:"133pt"}},"-n"),s("td",{class:"xl66",width:"185",style:{width:"139pt"}},"NameServer 服务地址，格式 ip:port")])],-1),I=s("p",null,"####3）Broker相关",-1),B=s("table",{border:"0",cellpadding:"0",cellspacing:"0",width:"714"},[s("col",{width:"177"}),s("col",{width:"175"}),s("col",{width:"177"}),s("col",{width:"185"}),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl63",width:"177",style:{height:"17.0pt",width:"133pt"}},"名称"),s("td",{class:"xl64",width:"175",style:{width:"131pt"}},"含义"),s("td",{class:"xl64",width:"177",style:{width:"133pt"}},"命令选项"),s("td",{class:"xl64",width:"185",style:{width:"139pt"}},"说明")]),s("tr",{height:"57",style:{height:"43.0pt"}},[s("td",{rowspan:"6",height:"206",class:"xl69",width:"191",style:{"border-bottom":"1.0pt",height:"154.0pt","border-top":"none",width:"143pt"}},"updateBrokerConfig"),s("td",{rowspan:"6",class:"xl72",width:"87",style:{"border-bottom":"1.0pt","border-top":"none",width:"65pt"}},"更新 Broker 配置文件，会修改Broker.conf"),s("td",{class:"xl67",width:"87",style:{width:"65pt"}},"-b"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"Broker 地址，格式为ip:port")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl67",width:"87",style:{height:"17.0pt",width:"65pt"}},"-c"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"cluster 名称")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl67",width:"87",style:{height:"17.0pt",width:"65pt"}},"-k"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"key 值")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl67",width:"87",style:{height:"17.0pt",width:"65pt"}},"-v"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"value 值")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl67",width:"87",style:{height:"17.0pt",width:"65pt"}},"-h"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"打印帮助")]),s("tr",{height:"57",style:{height:"43.0pt"}},[s("td",{height:"57",class:"xl67",width:"87",style:{height:"43.0pt",width:"65pt"}},"-n"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"NameServer 服务地址，格式 ip:port")]),s("tr",{height:"57",style:{height:"43.0pt"}},[s("td",{rowspan:"3",height:"137",class:"xl69",width:"191",style:{"border-bottom":"1.0pt",height:"103.0pt","border-top":"none",width:"143pt"}},"brokerStatus"),s("td",{rowspan:"3",class:"xl72",width:"87",style:{"border-bottom":"1.0pt","border-top":"none",width:"65pt"}},"查看 Broker 统计信息、运行状态（你想要的信息几乎都在里面）"),s("td",{class:"xl67",width:"87",style:{width:"65pt"}},"-b"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"Broker 地址，地址为ip:port")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl67",width:"87",style:{height:"17.0pt",width:"65pt"}},"-h"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"打印帮助")]),s("tr",{height:"57",style:{height:"43.0pt"}},[s("td",{height:"57",class:"xl67",width:"87",style:{height:"43.0pt",width:"65pt"}},"-n"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"NameServer 服务地址，格式 ip:port")]),s("tr",{height:"57",style:{height:"43.0pt"}},[s("td",{rowspan:"6",height:"256",class:"xl69",width:"191",style:{"border-bottom":"1.0pt",height:"192.0pt","border-top":"none",width:"143pt"}},"brokerConsumeStats"),s("td",{rowspan:"6",class:"xl72",width:"87",style:{"border-bottom":"1.0pt","border-top":"none",width:"65pt"}},"Broker中各个消费者的消费情况，按Message Queue维度返回Consume Offset，Broker Offset，Diff，TImestamp等信息"),s("td",{class:"xl67",width:"87",style:{width:"65pt"}},"-b"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"Broker 地址，地址为ip:port")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl67",width:"87",style:{height:"17.0pt",width:"65pt"}},"-t"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"请求超时时间")]),s("tr",{height:"39",style:{height:"29.0pt"}},[s("td",{height:"39",class:"xl67",width:"87",style:{height:"29.0pt",width:"65pt"}},"-l"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"diff阈值，超过阈值才打印")]),s("tr",{height:"57",style:{height:"43.0pt"}},[s("td",{height:"57",class:"xl67",width:"87",style:{height:"43.0pt",width:"65pt"}},"-o"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"是否为顺序topic，一般为false")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl67",width:"87",style:{height:"17.0pt",width:"65pt"}},"-h"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"打印帮助")]),s("tr",{height:"57",style:{height:"43.0pt"}},[s("td",{height:"57",class:"xl67",width:"87",style:{height:"43.0pt",width:"65pt"}},"-n"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"NameServer 服务地址，格式 ip:port")]),s("tr",{height:"57",style:{height:"43.0pt"}},[s("td",{rowspan:"2",height:"114",class:"xl69",width:"191",style:{"border-bottom":"1.0pt",height:"86.0pt","border-top":"none",width:"143pt"}},"getBrokerConfig"),s("td",{rowspan:"2",class:"xl72",width:"87",style:{"border-bottom":`1.0pt
  border-top:none`,width:"65pt"}},"获取Broker配置"),s("td",{class:"xl67",width:"87",style:{width:"65pt"}},"-b"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"Broker 地址，地址为ip:port")]),s("tr",{height:"57",style:{height:"43.0pt"}},[s("td",{height:"57",class:"xl67",width:"87",style:{height:"43.0pt",width:"65pt"}},"-n"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"NameServer 服务地址，格式 ip:port")]),s("tr",{height:"57",style:{height:"43.0pt"}},[s("td",{rowspan:"3",height:"137",class:"xl69",width:"191",style:{"border-bottom":"1.0pt",height:"103.0pt","border-top":"none",width:"143pt"}},"wipeWritePerm"),s("td",{rowspan:"3",class:"xl72",width:"87",style:{"border-bottom":`1.0pt
  border-top:none`,width:"65pt"}},"从NameServer上清除 Broker写权限"),s("td",{class:"xl67",width:"87",style:{width:"65pt"}},"-b"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"Broker 地址，地址为ip:port")]),s("tr",{height:"57",style:{height:"43.0pt"}},[s("td",{height:"57",class:"xl67",width:"87",style:{height:"43.0pt",width:"65pt"}},"-n"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"NameServer 服务地址，格式 ip:port")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl67",width:"87",style:{height:"17.0pt",width:"65pt"}},"-h"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"打印帮助")]),s("tr",{height:"57",style:{height:"43.0pt"}},[s("td",{rowspan:"4",height:"160",class:"xl69",width:"191",style:{"border-bottom":"1.0pt",height:"120.0pt","border-top":"none",width:"143pt"}},"cleanExpiredCQ"),s("td",{rowspan:"4",class:"xl72",width:"87",style:{"border-bottom":`1.0pt
  border-top:none`,width:"65pt"}},"清理Broker上过期的Consume Queue，如果手动减少对列数可能产生过期队列"),s("td",{class:"xl67",width:"87",style:{width:"65pt"}},"-n"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"NameServer 服务地址，格式 ip:port")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl67",width:"87",style:{height:"17.0pt",width:"65pt"}},"-h"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"打印帮助")]),s("tr",{height:"57",style:{height:"43.0pt"}},[s("td",{height:"57",class:"xl67",width:"87",style:{height:"43.0pt",width:"65pt"}},"-b"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"Broker 地址，地址为ip:port")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl67",width:"87",style:{height:"17.0pt",width:"65pt"}},"-c"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"集群名称")]),s("tr",{height:"88",style:{"mso-height-source":"userset",height:"66.0pt"}},[s("td",{rowspan:"4",height:"191",class:"xl69",width:"191",style:{"border-bottom":"1.0pt",height:"143.0pt","border-top":"none",width:"143pt"}},"cleanUnusedTopic"),s("td",{rowspan:"4",class:"xl72",width:"87",style:{"border-bottom":`1.0pt
  border-top:none`,width:"65pt"}},"清理Broker上不使用的Topic，从内存中释放Topic的Consume Queue，如果手动删除Topic会产生不使用的Topic"),s("td",{class:"xl67",width:"87",style:{width:"65pt"}},"-n"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"NameServer 服务地址，格式 ip:port")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl67",width:"87",style:{height:"17.0pt",width:"65pt"}},"-h"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"打印帮助")]),s("tr",{height:"57",style:{height:"43.0pt"}},[s("td",{height:"57",class:"xl67",width:"87",style:{height:"43.0pt",width:"65pt"}},"-b"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"Broker 地址，地址为ip:port")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl67",width:"87",style:{height:"17.0pt",width:"65pt"}},"-c"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"集群名称")]),s("tr",{height:"57",style:{height:"43.0pt"}},[s("td",{rowspan:"5",height:"199",class:"xl69",width:"191",style:{"border-bottom":"1.0pt",height:"149.0pt","border-top":"none",width:"143pt"}},"sendMsgStatus"),s("td",{rowspan:"5",class:"xl72",width:"87",style:{"border-bottom":`1.0pt
  border-top:none`,width:"65pt"}},"向Broker发消息，返回发送状态和RT"),s("td",{class:"xl67",width:"87",style:{width:"65pt"}},"-n"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"NameServer 服务地址，格式 ip:port")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl67",width:"87",style:{height:"17.0pt",width:"65pt"}},"-h"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"打印帮助")]),s("tr",{height:"57",style:{height:"43.0pt"}},[s("td",{height:"57",class:"xl67",width:"87",style:{height:"43.0pt",width:"65pt"}},"-b"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"BrokerName，注意不同于Broker地址")]),s("tr",{height:"39",style:{height:"29.0pt"}},[s("td",{height:"39",class:"xl67",width:"87",style:{height:"29.0pt",width:"65pt"}},"-s"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"消息大小，单位B")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl67",width:"87",style:{height:"17.0pt",width:"65pt"}},"-c"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"发送次数")])],-1),R=s("p",null,"####4）消息相关",-1),Q=s("table",{border:"0",cellpadding:"0",cellspacing:"0",width:"714"},[s("col",{width:"177"}),s("col",{width:"175"}),s("col",{width:"177"}),s("col",{width:"185"}),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl63",width:"177",style:{height:"17.0pt",width:"133pt"}},"名称"),s("td",{class:"xl64",width:"175",style:{width:"131pt"}},"含义"),s("td",{class:"xl64",width:"177",style:{width:"133pt"}},"命令选项"),s("td",{class:"xl64",width:"185",style:{width:"139pt"}},"说明")]),s("tr",{height:"128",style:{height:"96.0pt"}},[s("td",{rowspan:"3",height:"208",class:"xl69",width:"87",style:{"border-bottom":"1.0pt",height:"156.0pt","border-top":"none",width:"65pt"}},"queryMsgById"),s("td",{rowspan:"3",class:"xl72",width:"87",style:{"border-bottom":"1.0pt","border-top":"none",width:"65pt"}},"根据offsetMsgId查询msg，如果使用开源控制台，应使用offsetMsgId，此命令还有其他参数，具体作用请阅读QueryMsgByIdSubCommand。"),s("td",{class:"xl67",width:"87",style:{width:"65pt"}},"-i"),s("td",{class:"xl67",width:"87",style:{width:"65pt"}},"msgId")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl67",width:"87",style:{height:"17.0pt",width:"65pt"}},"-h"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"打印帮助")]),s("tr",{height:"57",style:{height:"43.0pt"}},[s("td",{height:"57",class:"xl67",width:"87",style:{height:"43.0pt",width:"65pt"}},"-n"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"NameServer 服务地址，格式 ip:port")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{rowspan:"4",height:"126",class:"xl69",width:"87",style:{"border-bottom":"1.0pt",height:"94.0pt","border-top":"none",width:"65pt"}},"queryMsgByKey"),s("td",{rowspan:"4",class:"xl72",width:"87",style:{"border-bottom":"1.0pt","border-top":"none",width:"65pt"}},"根据消息 Key 查询消息"),s("td",{class:"xl67",width:"87",style:{width:"65pt"}},"-k"),s("td",{class:"xl67",width:"87",style:{width:"65pt"}},"msgKey")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl67",width:"87",style:{height:"17.0pt",width:"65pt"}},"-t"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"Topic 名称")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl67",width:"87",style:{height:"17.0pt",width:"65pt"}},"-h"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"打印帮助")]),s("tr",{height:"57",style:{height:"43.0pt"}},[s("td",{height:"57",class:"xl67",width:"87",style:{height:"43.0pt",width:"65pt"}},"-n"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"NameServer 服务地址，格式 ip:port")]),s("tr",{height:"225",style:{height:"169.0pt"}},[s("td",{rowspan:"6",height:"390",class:"xl69",width:"87",style:{"border-bottom":"1.0pt",height:"292.0pt","border-top":"none",width:"65pt"}},"queryMsgByOffset"),s("td",{rowspan:"6",class:"xl72",width:"87",style:{"border-bottom":"1.0pt","border-top":"none",width:"65pt"}},"根据 Offset 查询消息"),s("td",{class:"xl67",width:"87",style:{width:"65pt"}},"-b"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"Broker 名称，（这里需要注意 填写的是 Broker 的名称，不是 Broker 的地址，Broker 名称可以在 clusterList 查到）")]),s("tr",{height:"39",style:{height:"29.0pt"}},[s("td",{height:"39",class:"xl67",width:"87",style:{height:"29.0pt",width:"65pt"}},"-i"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"query 队列 id")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl67",width:"87",style:{height:"17.0pt",width:"65pt"}},"-o"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"offset 值")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl67",width:"87",style:{height:"17.0pt",width:"65pt"}},"-t"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"topic 名称")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl67",width:"87",style:{height:"17.0pt",width:"65pt"}},"-h"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"打印帮助")]),s("tr",{height:"57",style:{height:"43.0pt"}},[s("td",{height:"57",class:"xl67",width:"87",style:{height:"43.0pt",width:"65pt"}},"-n"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"NameServer 服务地址，格式 ip:port")]),s("tr",{height:"47"},[s("td",{rowspan:"6",height:"209",class:"xl69",width:"87",style:{"border-bottom":"1.0pt",height:"156.0pt","border-top":"none",width:"65pt"}},"queryMsgByUniqueKey"),s("td",{rowspan:"6",class:"xl72",width:"87",style:{"border-bottom":"1.0pt","border-top":"none",width:"65pt"}},"根据msgId查询，msgId不同于offsetMsgId，区别详见常见运维问题。-g，-d配合使用，查到消息后尝试让特定的消费者消费消息并返回消费结果"),s("td",{class:"xl67",width:"87",style:{width:"65pt"}},"-h"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"打印帮助")]),s("tr",{height:"57",style:{height:"43.0pt"}},[s("td",{height:"57",class:"xl67",width:"87",style:{height:"43.0pt",width:"65pt"}},"-n"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"NameServer 服务地址，格式 ip:port")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl67",width:"87",style:{height:"17.0pt",width:"65pt"}},"-i"),s("td",{class:"xl67",width:"87",style:{width:"65pt"}},"uniqe msg id")]),s("tr",{height:"36",style:{height:"27.0pt"}},[s("td",{height:"36",class:"xl67",width:"87",style:{height:"27.0pt",width:"65pt"}},"-g"),s("td",{class:"xl67",width:"87",style:{width:"65pt"}},"consumerGroup")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl67",width:"87",style:{height:"17.0pt",width:"65pt"}},"-d"),s("td",{class:"xl67",width:"87",style:{width:"65pt"}},"clientId")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl67",width:"87",style:{height:"17.0pt",width:"65pt"}},"-t"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"topic名称")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{rowspan:"5",height:"149",class:"xl69",width:"87",style:{"border-bottom":`1.0pt
  height:111.0pt`,"border-top":"none",width:"65pt"}},"checkMsgSendRT"),s("td",{rowspan:"5",class:"xl72",width:"87",style:{"border-bottom":"1.0pt","border-top":"none",width:"65pt"}},"检测向topic发消息的RT，功能类似clusterRT"),s("td",{class:"xl67",width:"87",style:{width:"65pt"}},"-h"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"打印帮助")]),s("tr",{height:"57",style:{height:"43.0pt"}},[s("td",{height:"57",class:"xl67",width:"87",style:{height:"43.0pt",width:"65pt"}},"-n"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"NameServer 服务地址，格式 ip:port")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl67",width:"87",style:{height:"17.0pt",width:"65pt"}},"-t"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"topic名称")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl67",width:"87",style:{height:"17.0pt",width:"65pt"}},"-a"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"探测次数")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl67",width:"87",style:{height:"17.0pt",width:"65pt"}},"-s"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"消息大小")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{rowspan:"8",height:"218",class:"xl69",width:"87",style:{"border-bottom":"1.0pt",height:"162.0pt","border-top":"none",width:"65pt"}},"sendMessage"),s("td",{rowspan:"8",class:"xl72",width:"87",style:{"border-bottom":"1.0pt","border-top":"none",width:"65pt"}},"发送一条消息，可以根据配置发往特定Message Queue，或普通发送。"),s("td",{class:"xl67",width:"87",style:{width:"65pt"}},"-h"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"打印帮助")]),s("tr",{height:"57",style:{height:"43.0pt"}},[s("td",{height:"57",class:"xl67",width:"87",style:{height:"43.0pt",width:"65pt"}},"-n"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"NameServer 服务地址，格式 ip:port")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl67",width:"87",style:{height:"17.0pt",width:"65pt"}},"-t"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"topic名称")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl67",width:"87",style:{height:"17.0pt",width:"65pt"}},"-p"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"body，消息体")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl67",width:"87",style:{height:"17.0pt",width:"65pt"}},"-k"),s("td",{class:"xl67",width:"87",style:{width:"65pt"}},"keys")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl67",width:"87",style:{height:"17.0pt",width:"65pt"}},"-c"),s("td",{class:"xl67",width:"87",style:{width:"65pt"}},"tags")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl67",width:"87",style:{height:"17.0pt",width:"65pt"}},"-b"),s("td",{class:"xl67",width:"87",style:{width:"65pt"}},"BrokerName")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl67",width:"87",style:{height:"17.0pt",width:"65pt"}},"-i"),s("td",{class:"xl67",width:"87",style:{width:"65pt"}},"queueId")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{rowspan:"10",height:"312",class:"xl69",width:"87",style:{"border-bottom":"1.0pt",height:"232.0pt","border-top":"none",width:"65pt"}},"consumeMessage"),s("td",{rowspan:"10",class:"xl72",width:"87",style:{"border-bottom":"1.0pt","border-top":"none",width:"65pt"}},"消费消息。可以根据offset、开始&结束时间戳、消息队列消费消息，配置不同执行不同消费逻辑，详见ConsumeMessageCommand。"),s("td",{class:"xl67",width:"87",style:{width:"65pt"}},"-h"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"打印帮助")]),s("tr",{height:"57",style:{height:"43.0pt"}},[s("td",{height:"57",class:"xl67",width:"87",style:{height:"43.0pt",width:"65pt"}},"-n"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"NameServer 服务地址，格式 ip:port")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl67",width:"87",style:{height:"17.0pt",width:"65pt"}},"-t"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"topic名称")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl67",width:"87",style:{height:"17.0pt",width:"65pt"}},"-b"),s("td",{class:"xl67",width:"87",style:{width:"65pt"}},"BrokerName")]),s("tr",{height:"39",style:{height:"29.0pt"}},[s("td",{height:"39",class:"xl67",width:"87",style:{height:"29.0pt",width:"65pt"}},"-o"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"从offset开始消费")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl67",width:"87",style:{height:"17.0pt",width:"65pt"}},"-i"),s("td",{class:"xl67",width:"87",style:{width:"65pt"}},"queueId")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl67",width:"87",style:{height:"17.0pt",width:"65pt"}},"-g"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"消费者分组")]),s("tr",{height:"39",style:{height:"29.0pt"}},[s("td",{height:"39",class:"xl67",width:"87",style:{height:"29.0pt",width:"65pt"}},"-s"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"开始时间戳，格式详见-h")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl67",width:"87",style:{height:"17.0pt",width:"65pt"}},"-d"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"结束时间戳")]),s("tr",{height:"39",style:{height:"29.0pt"}},[s("td",{height:"39",class:"xl67",width:"87",style:{height:"29.0pt",width:"65pt"}},"-c"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"消费多少条消息")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{rowspan:"8",height:"282",class:"xl69",width:"87",style:{"border-bottom":"1.0pt",height:"210.0pt","border-top":"none",width:"65pt"}},"printMsg"),s("td",{rowspan:"8",class:"xl72",width:"87",style:{"border-bottom":"1.0pt","border-top":"none",width:"65pt"}},"从Broker消费消息并打印，可选时间段"),s("td",{class:"xl67",width:"87",style:{width:"65pt"}},"-h"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"打印帮助")]),s("tr",{height:"57",style:{height:"43.0pt"}},[s("td",{height:"57",class:"xl67",width:"87",style:{height:"43.0pt",width:"65pt"}},"-n"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"NameServer 服务地址，格式 ip:port")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl67",width:"87",style:{height:"17.0pt",width:"65pt"}},"-t"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"topic名称")]),s("tr",{height:"39",style:{height:"29.0pt"}},[s("td",{height:"39",class:"xl67",width:"87",style:{height:"29.0pt",width:"65pt"}},"-c"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"字符集，例如UTF-8")]),s("tr",{height:"39",style:{height:"29.0pt"}},[s("td",{height:"39",class:"xl67",width:"87",style:{height:"29.0pt",width:"65pt"}},"-s"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"subExpress，过滤表达式")]),s("tr",{height:"39",style:{height:"29.0pt"}},[s("td",{height:"39",class:"xl67",width:"87",style:{height:"29.0pt",width:"65pt"}},"-b"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"开始时间戳，格式参见-h")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl67",width:"87",style:{height:"17.0pt",width:"65pt"}},"-e"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"结束时间戳")]),s("tr",{height:"39",style:{height:"29.0pt"}},[s("td",{height:"39",class:"xl67",width:"87",style:{height:"29.0pt",width:"65pt"}},"-d"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"是否打印消息体")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{rowspan:"12",height:"390",class:"xl69",width:"87",style:{"border-bottom":"1.0pt",height:"290.0pt","border-top":"none",width:"65pt"}},"printMsgByQueue"),s("td",{rowspan:"12",class:"xl72",width:"87",style:{"border-bottom":"1.0pt","border-top":"none",width:"65pt"}},"类似printMsg，但指定Message Queue"),s("td",{class:"xl67",width:"87",style:{width:"65pt"}},"-h"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"打印帮助")]),s("tr",{height:"57",style:{height:"43.0pt"}},[s("td",{height:"57",class:"xl67",width:"87",style:{height:"43.0pt",width:"65pt"}},"-n"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"NameServer 服务地址，格式 ip:port")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl67",width:"87",style:{height:"17.0pt",width:"65pt"}},"-t"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"topic名称")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl67",width:"87",style:{height:"17.0pt",width:"65pt"}},"-i"),s("td",{class:"xl67",width:"87",style:{width:"65pt"}},"queueId")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl67",width:"87",style:{height:"17.0pt",width:"65pt"}},"-a"),s("td",{class:"xl67",width:"87",style:{width:"65pt"}},"BrokerName")]),s("tr",{height:"39",style:{height:"29.0pt"}},[s("td",{height:"39",class:"xl67",width:"87",style:{height:"29.0pt",width:"65pt"}},"-c"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"字符集，例如UTF-8")]),s("tr",{height:"39",style:{height:"29.0pt"}},[s("td",{height:"39",class:"xl67",width:"87",style:{height:"29.0pt",width:"65pt"}},"-s"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"subExpress，过滤表达式")]),s("tr",{height:"39",style:{height:"29.0pt"}},[s("td",{height:"39",class:"xl67",width:"87",style:{height:"29.0pt",width:"65pt"}},"-b"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"开始时间戳，格式参见-h")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl67",width:"87",style:{height:"17.0pt",width:"65pt"}},"-e"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"结束时间戳")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl67",width:"87",style:{height:"17.0pt",width:"65pt"}},"-p"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"是否打印消息")]),s("tr",{height:"39",style:{height:"29.0pt"}},[s("td",{height:"39",class:"xl67",width:"87",style:{height:"29.0pt",width:"65pt"}},"-d"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"是否打印消息体")]),s("tr",{height:"39",style:{height:"29.0pt"}},[s("td",{height:"39",class:"xl67",width:"87",style:{height:"29.0pt",width:"65pt"}},"-f"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"是否统计tag数量并打印")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{rowspan:"7",height:"410",class:"xl69",width:"87",style:{"border-bottom":"1.0pt",height:"307.0pt","border-top":"none",width:"65pt"}},"resetOffsetByTime"),s("td",{rowspan:"7",class:"xl72",width:"87",style:{"border-bottom":"1.0pt","border-top":"none",width:"65pt"}},"按时间戳重置offset，Broker和consumer都会重置"),s("td",{class:"xl67",width:"87",style:{width:"65pt"}},"-h"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"打印帮助")]),s("tr",{height:"57",style:{height:"43.0pt"}},[s("td",{height:"57",class:"xl67",width:"87",style:{height:"43.0pt",width:"65pt"}},"-n"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"NameServer 服务地址，格式 ip:port")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl67",width:"87",style:{height:"17.0pt",width:"65pt"}},"-g"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"消费者分组")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl67",width:"87",style:{height:"17.0pt",width:"65pt"}},"-t"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"topic名称")]),s("tr",{height:"57",style:{height:"43.0pt"}},[s("td",{height:"57",class:"xl67",width:"87",style:{height:"43.0pt",width:"65pt"}},"-s"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"重置为此时间戳对应的offset")]),s("tr",{height:"188",style:{height:"141.0pt"}},[s("td",{height:"188",class:"xl67",width:"87",style:{height:"141.0pt",width:"65pt"}},"-f"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"是否强制重置，如果false，只支持回溯offset，如果true，不管时间戳对应offset与consumeOffset关系")]),s("tr",{height:"39",style:{height:"29.0pt"}},[s("td",{height:"39",class:"xl67",width:"87",style:{height:"29.0pt",width:"65pt"}},"-c"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"是否重置c++客户端offset")])],-1),E=s("h4",{id:"_5-消费者、消费组相关",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_5-消费者、消费组相关","aria-hidden":"true"},"#"),n(" 5）消费者、消费组相关")],-1),D=s("table",{border:"0",cellpadding:"0",cellspacing:"0",width:"714"},[s("col",{width:"177"}),s("col",{width:"175"}),s("col",{width:"177"}),s("col",{width:"185"}),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl63",width:"177",style:{height:"17.0pt",width:"133pt"}},"名称"),s("td",{class:"xl64",width:"175",style:{width:"131pt"}},"含义"),s("td",{class:"xl64",width:"177",style:{width:"133pt"}},"命令选项"),s("td",{class:"xl64",width:"185",style:{width:"139pt"}},"说明")]),s("tr",{height:"39",style:{height:"29.0pt"}},[s("td",{rowspan:"4",height:"158",class:"xl69",width:"87",style:{"border-bottom":"1.0pt",height:"110pt","border-top":"none",width:"65pt"}},"consumerProgress"),s("td",{rowspan:"4",class:"xl72",width:"87",style:{"border-bottom":"1.0pt","border-top":"none",width:"65pt"}},"查看订阅组消费状态，可以查看具体的client IP的消息积累量"),s("td",{class:"xl67",width:"87",style:{width:"65pt"}},"-g"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"消费者所属组名")]),s("tr",{height:"39",style:{height:"29.0pt"}},[s("td",{height:"39",class:"xl67",width:"87",style:{height:"29.0pt",width:"65pt"}},"-s"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"是否打印client IP")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl67",width:"87",style:{height:"17.0pt",width:"65pt"}},"-h"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"打印帮助")]),s("tr",{height:"57",style:{height:"43.0pt"}},[s("td",{height:"57",class:"xl67",width:"87",style:{height:"43.0pt",width:"65pt"}},"-n"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"NameServer 服务地址，格式 ip:port")]),s("tr",{height:"105",style:{"mso-height-source":"userset",height:"79.0pt"}},[s("td",{rowspan:"5",height:"260",class:"xl69",width:"87",style:{"border-bottom":"1.0pt",height:"195.0pt","border-top":"none",width:"65pt"}},"consumerStatus"),s("td",{rowspan:"5",class:"xl72",width:"87",style:{"border-bottom":`1.0pt
  border-top:none`,width:"65pt"}},"查看消费者状态，包括同一个分组中是否都是相同的订阅，分析Process Queue是否堆积，返回消费者jstack结果，内容较多，使用者参见ConsumerStatusSubCommand"),s("td",{class:"xl67",width:"87",style:{width:"65pt"}},"-h"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"打印帮助")]),s("tr",{height:"57",style:{height:"43.0pt"}},[s("td",{height:"57",class:"xl67",width:"87",style:{height:"43.0pt",width:"65pt"}},"-n"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"NameServer 服务地址，格式 ip:port")]),s("tr",{height:"36",style:{height:"27.0pt"}},[s("td",{height:"36",class:"xl67",width:"87",style:{height:"27.0pt",width:"65pt"}},"-g"),s("td",{class:"xl67",width:"87",style:{width:"65pt"}},"consumer group")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl67",width:"87",style:{height:"17.0pt",width:"65pt"}},"-i"),s("td",{class:"xl67",width:"87",style:{width:"65pt"}},"clientId")]),s("tr",{height:"39",style:{height:"29.0pt"}},[s("td",{height:"39",class:"xl67",width:"87",style:{height:"29.0pt",width:"65pt"}},"-s"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"是否执行jstack")]),s("tr",{height:"39",style:{height:"29.0pt"}},[s("td",{rowspan:"5",height:"181",class:"xl69",width:"87",style:{"border-bottom":`1.0pt
  height:135.0pt`,"border-top":"none",width:"65pt"}},"getConsumerStatus"),s("td",{rowspan:"5",class:"xl72",width:"87",style:{"border-bottom":`1.0pt
  border-top:none`,width:"65pt"}},"获取 Consumer 消费进度"),s("td",{class:"xl67",width:"87",style:{width:"65pt"}},"-g"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"消费者所属组名")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl67",width:"87",style:{height:"17.0pt",width:"65pt"}},"-t"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"查询主题")]),s("tr",{height:"39",style:{height:"29.0pt"}},[s("td",{height:"39",class:"xl67",width:"87",style:{height:"29.0pt",width:"65pt"}},"-i"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"Consumer 客户端 ip")]),s("tr",{height:"57",style:{height:"43.0pt"}},[s("td",{height:"57",class:"xl67",width:"87",style:{height:"43.0pt",width:"65pt"}},"-n"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"NameServer 服务地址，格式 ip:port")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl67",width:"87",style:{height:"17.0pt",width:"65pt"}},"-h"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"打印帮助")]),s("tr",{height:"57",style:{height:"43.0pt"}},[s("td",{rowspan:"13",height:"761",class:"xl69",width:"87",style:{"border-bottom":`1.0pt
  height:569.0pt`,"border-top":"none",width:"65pt"}},"updateSubGroup"),s("td",{rowspan:"13",class:"xl72",width:"87",style:{"border-bottom":`1.0pt
  border-top:none`,width:"65pt"}},"更新或创建订阅关系"),s("td",{class:"xl67",width:"87",style:{width:"65pt"}},"-n"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"NameServer 服务地址，格式 ip:port")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl67",width:"87",style:{height:"17.0pt",width:"65pt"}},"-h"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"打印帮助")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl67",width:"87",style:{height:"17.0pt",width:"65pt"}},"-b"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"Broker地址")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl67",width:"87",style:{height:"17.0pt",width:"65pt"}},"-c"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"集群名称")]),s("tr",{height:"39",style:{height:"29.0pt"}},[s("td",{height:"39",class:"xl67",width:"87",style:{height:"29.0pt",width:"65pt"}},"-g"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"消费者分组名称")]),s("tr",{height:"39",style:{height:"29.0pt"}},[s("td",{height:"39",class:"xl67",width:"87",style:{height:"29.0pt",width:"65pt"}},"-s"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"分组是否允许消费")]),s("tr",{height:"57",style:{height:"43.0pt"}},[s("td",{height:"57",class:"xl67",width:"87",style:{height:"43.0pt",width:"65pt"}},"-m"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"是否从最小offset开始消费")]),s("tr",{height:"39",style:{height:"29.0pt"}},[s("td",{height:"39",class:"xl67",width:"87",style:{height:"29.0pt",width:"65pt"}},"-d"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"是否是广播模式")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl67",width:"87",style:{height:"17.0pt",width:"65pt"}},"-q"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"重试队列数量")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl67",width:"87",style:{height:"17.0pt",width:"65pt"}},"-r"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"最大重试次数")]),s("tr",{height:"207",style:{height:"155.0pt"}},[s("td",{height:"207",class:"xl67",width:"87",style:{height:"155.0pt",width:"65pt"}},"-i"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"当slaveReadEnable开启时有效，且还未达到从slave消费时建议从哪个BrokerId消费，可以配置备机id，主动从备机消费")]),s("tr",{height:"132",style:{height:"99.0pt"}},[s("td",{height:"132",class:"xl67",width:"87",style:{height:"99.0pt",width:"65pt"}},"-w"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"如果Broker建议从slave消费，配置决定从哪个slave消费，配置BrokerId，例如1")]),s("tr",{height:"76",style:{height:"57.0pt"}},[s("td",{height:"76",class:"xl67",width:"87",style:{height:"57.0pt",width:"65pt"}},"-a"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"当消费者数量变化时是否通知其他消费者负载均衡")]),s("tr",{height:"57",style:{height:"43.0pt"}},[s("td",{rowspan:"5",height:"165",class:"xl69",width:"87",style:{"border-bottom":`1.0pt
  height:123.0pt`,"border-top":"none",width:"65pt"}},"deleteSubGroup"),s("td",{rowspan:"5",class:"xl72",width:"87",style:{"border-bottom":`1.0pt
  border-top:none`,width:"65pt"}},"从Broker删除订阅关系"),s("td",{class:"xl67",width:"87",style:{width:"65pt"}},"-n"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"NameServer 服务地址，格式 ip:port")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl67",width:"87",style:{height:"17.0pt",width:"65pt"}},"-h"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"打印帮助")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl67",width:"87",style:{height:"17.0pt",width:"65pt"}},"-b"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"Broker地址")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl67",width:"87",style:{height:"17.0pt",width:"65pt"}},"-c"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"集群名称")]),s("tr",{height:"39",style:{height:"29.0pt"}},[s("td",{height:"39",class:"xl67",width:"87",style:{height:"29.0pt",width:"65pt"}},"-g"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"消费者分组名称")]),s("tr",{height:"57",style:{height:"43.0pt"}},[s("td",{rowspan:"6",height:"172",class:"xl69",width:"87",style:{"border-bottom":`1.0pt
  height:120pt`,"border-top":"none",width:"65pt"}},"cloneGroupOffset"),s("td",{rowspan:"6",class:"xl72",width:"87",style:{"border-bottom":`1.0pt
  border-top:none`,width:"65pt"}},"在目标群组中使用源群组的offset"),s("td",{class:"xl67",width:"87",style:{width:"65pt"}},"-n"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"NameServer 服务地址，格式 ip:port")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl67",width:"87",style:{height:"17.0pt",width:"65pt"}},"-h"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"打印帮助")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl67",width:"87",style:{height:"17.0pt",width:"65pt"}},"-s"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"源消费者组")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl67",width:"87",style:{height:"17.0pt",width:"65pt"}},"-d"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"目标消费者组")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl67",width:"87",style:{height:"17.0pt",width:"65pt"}},"-t"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"topic名称")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl67",width:"87",style:{height:"17.0pt",width:"65pt"}},"-o"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"暂未使用")])],-1),P=s("h4",{id:"_6-连接相关",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_6-连接相关","aria-hidden":"true"},"#"),n(" 6）连接相关")],-1),A=s("table",{border:"0",cellpadding:"0",cellspacing:"0",width:"714"},[s("col",{width:"177"}),s("col",{width:"175"}),s("col",{width:"177"}),s("col",{width:"185"}),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl63",width:"177",style:{height:"17.0pt",width:"133pt"}},"名称"),s("td",{class:"xl64",width:"175",style:{width:"131pt"}},"含义"),s("td",{class:"xl64",width:"177",style:{width:"133pt"}},"命令选项"),s("td",{class:"xl64",width:"185",style:{width:"139pt"}},"说明")]),s("tr",{height:"39",style:{height:"29.0pt"}},[s("td",{rowspan:"3",height:"119",class:"xl69",width:"87",style:{"border-bottom":`1.0pt
  height:89.0pt`,"border-top":"none",width:"65pt"}},"consumerConnec tion"),s("td",{rowspan:"3",class:"xl72",width:"87",style:{"border-bottom":`1.0pt
  border-top:none`,width:"65pt"}},"查询 Consumer 的网络连接"),s("td",{class:"xl67",width:"87",style:{width:"65pt"}},"-g"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"消费者所属组名")]),s("tr",{height:"57",style:{height:"43.0pt"}},[s("td",{height:"57",class:"xl67",width:"87",style:{height:"43.0pt",width:"65pt"}},"-n"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"NameServer 服务地址，格式 ip:port")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl67",width:"87",style:{height:"17.0pt",width:"65pt"}},"-h"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"打印帮助")]),s("tr",{height:"39",style:{height:"29.0pt"}},[s("td",{rowspan:"4",height:"142",class:"xl69",width:"87",style:{"border-bottom":`1.0pt
  height:106.0pt`,"border-top":"none",width:"65pt"}},"producerConnec tion"),s("td",{rowspan:"4",class:"xl72",width:"87",style:{"border-bottom":`1.0pt
  border-top:none`,width:"65pt"}},"查询 Producer 的网络连接"),s("td",{class:"xl67",width:"87",style:{width:"65pt"}},"-g"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"生产者所属组名")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl67",width:"87",style:{height:"17.0pt",width:"65pt"}},"-t"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"主题名称")]),s("tr",{height:"57",style:{height:"43.0pt"}},[s("td",{height:"57",class:"xl67",width:"87",style:{height:"43.0pt",width:"65pt"}},"-n"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"NameServer 服务地址，格式 ip:port")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl67",width:"87",style:{height:"17.0pt",width:"65pt"}},"-h"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"打印帮助")])],-1),O=s("h4",{id:"_7-nameserver相关",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_7-nameserver相关","aria-hidden":"true"},"#"),n(" 7）NameServer相关")],-1),j=s("table",{border:"0",cellpadding:"0",cellspacing:"0",width:"714"},[s("col",{width:"177"}),s("col",{width:"175"}),s("col",{width:"177"}),s("col",{width:"185"}),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl63",width:"177",style:{height:"17.0pt",width:"133pt"}},"名称"),s("td",{class:"xl64",width:"175",style:{width:"131pt"}},"含义"),s("td",{class:"xl64",width:"177",style:{width:"133pt"}},"命令选项"),s("td",{class:"xl64",width:"185",style:{width:"139pt"}},"说明")]),s("tr",{height:"21",style:{height:"16.0pt"}},[s("td",{rowspan:"5",height:"143",class:"xl69",width:"87",style:{"border-bottom":`1.0pt
  height:100pt`,"border-top":"none",width:"65pt"}},"updateKvConfig"),s("td",{rowspan:"5",class:"xl72",width:"87",style:{"border-bottom":`1.0pt
  border-top:none`,width:"65pt"}},"更新NameServer的kv配置，目前还未使用"),s("td",{class:"xl75",width:"87",style:{width:"65pt"}},"-s"),s("td",{class:"xl76",width:"87",style:{width:"65pt"}},"命名空间")]),s("tr",{height:"21",style:{height:"16.0pt"}},[s("td",{height:"21",class:"xl75",width:"87",style:{height:"16.0pt",width:"65pt"}},"-k"),s("td",{class:"xl75",width:"87",style:{width:"65pt"}},"key")]),s("tr",{height:"21",style:{height:"16.0pt"}},[s("td",{height:"21",class:"xl75",width:"87",style:{height:"16.0pt",width:"65pt"}},"-v"),s("td",{class:"xl75",width:"87",style:{width:"65pt"}},"value")]),s("tr",{height:"57",style:{height:"43.0pt"}},[s("td",{height:"57",class:"xl67",width:"87",style:{height:"43.0pt",width:"65pt"}},"-n"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"NameServer 服务地址，格式 ip:port")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl67",width:"87",style:{height:"17.0pt",width:"65pt"}},"-h"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"打印帮助")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{rowspan:"4",height:"126",class:"xl69",width:"87",style:{"border-bottom":`1.0pt
  height:94.0pt`,"border-top":"none",width:"65pt"}},"deleteKvConfig"),s("td",{rowspan:"4",class:"xl72",width:"87",style:{"border-bottom":`1.0pt
  border-top:none`,width:"65pt"}},"删除NameServer的kv配置"),s("td",{class:"xl67",width:"87",style:{width:"65pt"}},"-s"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"命名空间")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl67",width:"87",style:{height:"17.0pt",width:"65pt"}},"-k"),s("td",{class:"xl67",width:"87",style:{width:"65pt"}},"key")]),s("tr",{height:"57",style:{height:"43.0pt"}},[s("td",{height:"57",class:"xl67",width:"87",style:{height:"43.0pt",width:"65pt"}},"-n"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"NameServer 服务地址，格式 ip:port")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl67",width:"87",style:{height:"17.0pt",width:"65pt"}},"-h"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"打印帮助")]),s("tr",{height:"57",style:{height:"43.0pt"}},[s("td",{rowspan:"2",height:"80",class:"xl69",width:"87",style:{"border-bottom":`1.0pt
  height:60.0pt`,"border-top":"none",width:"65pt"}},"getNamesrvConfig"),s("td",{rowspan:"2",class:"xl72",width:"87",style:{"border-bottom":`1.0pt
  border-top:none`,width:"65pt"}},"获取NameServer配置"),s("td",{class:"xl67",width:"87",style:{width:"65pt"}},"-n"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"NameServer 服务地址，格式 ip:port")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl67",width:"87",style:{height:"17.0pt",width:"65pt"}},"-h"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"打印帮助")]),s("tr",{height:"57",style:{height:"43.0pt"}},[s("td",{rowspan:"4",height:"126",class:"xl69",width:"87",style:{"border-bottom":`1.0pt
  height:94.0pt`,"border-top":"none",width:"65pt"}},"updateNamesrvConfig"),s("td",{rowspan:"4",class:"xl72",width:"87",style:{"border-bottom":`1.0pt
  border-top:none`,width:"65pt"}},"修改NameServer配置"),s("td",{class:"xl67",width:"87",style:{width:"65pt"}},"-n"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"NameServer 服务地址，格式 ip:port")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl67",width:"87",style:{height:"17.0pt",width:"65pt"}},"-h"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"打印帮助")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl67",width:"87",style:{height:"17.0pt",width:"65pt"}},"-k"),s("td",{class:"xl67",width:"87",style:{width:"65pt"}},"key")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl67",width:"87",style:{height:"17.0pt",width:"65pt"}},"-v"),s("td",{class:"xl67",width:"87",style:{width:"65pt"}},"value")])],-1),H=s("h4",{id:"_8-其他",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_8-其他","aria-hidden":"true"},"#"),n(" 8）其他")],-1),F=s("table",{border:"0",cellpadding:"0",cellspacing:"0",width:"714"},[s("col",{width:"177"}),s("col",{width:"175"}),s("col",{width:"177"}),s("col",{width:"185"}),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl63",width:"177",style:{height:"17.0pt",width:"133pt"}},"名称"),s("td",{class:"xl64",width:"175",style:{width:"131pt"}},"含义"),s("td",{class:"xl64",width:"177",style:{width:"133pt"}},"命令选项"),s("td",{class:"xl64",width:"185",style:{width:"139pt"}},"说明")]),s("tr",{height:"57",style:{height:"43.0pt"}},[s("td",{rowspan:"2",height:"80",class:"xl69",width:"87",style:{"border-bottom":`1.0pt
  height:60.0pt`,"border-top":"none",width:"65pt"}},"startMonitoring"),s("td",{rowspan:"2",class:"xl71",width:"87",style:{"border-bottom":`1.0pt
  border-top:none`,width:"65pt"}},"开启监控进程，监控消息误删、重试队列消息数等"),s("td",{class:"xl67",width:"87",style:{width:"65pt"}},"-n"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"NameServer 服务地址，格式 ip:port")]),s("tr",{height:"23",style:{height:"17.0pt"}},[s("td",{height:"23",class:"xl67",width:"87",style:{height:"17.0pt",width:"65pt"}},"-h"),s("td",{class:"xl68",width:"87",style:{width:"65pt"}},"打印帮助")])],-1),U=a('<h3 id="_3-4-3-注意事项" tabindex="-1"><a class="header-anchor" href="#_3-4-3-注意事项" aria-hidden="true">#</a> 3.4.3 注意事项</h3><ul><li>几乎所有命令都需要配置-n表示NameServer地址，格式为ip:port</li><li>几乎所有命令都可以通过-h获取帮助</li><li>如果既有Broker地址（-b）配置项又有clusterName（-c）配置项，则优先以Broker地址执行命令；如果不配置Broker地址，则对集群中所有主机执行命令</li></ul><h2 id="_3-5-集群监控平台搭建" tabindex="-1"><a class="header-anchor" href="#_3-5-集群监控平台搭建" aria-hidden="true">#</a> 3.5 集群监控平台搭建</h2><h3 id="_3-5-1-概述" tabindex="-1"><a class="header-anchor" href="#_3-5-1-概述" aria-hidden="true">#</a> 3.5.1 概述</h3>',4),z=s("code",null,"RocketMQ",-1),G={href:"https://github.com/apache/rocketmq-externals",target:"_blank",rel:"noopener noreferrer"},Y=s("code",null,"rocketmq-console",-1),K={href:"https://github.com/apache/rocketmq-externals",target:"_blank",rel:"noopener noreferrer"},V=s("code",null,"rocketmq-console",-1),W=a('<p><img src="'+y+`" alt=""></p><h3 id="_3-5-2-下载并编译打包" tabindex="-1"><a class="header-anchor" href="#_3-5-2-下载并编译打包" aria-hidden="true">#</a> 3.5.2 下载并编译打包</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> clone https://github.com/apache/rocketmq-externals
<span class="token builtin class-name">cd</span> rocketmq-console
mvn clean package <span class="token parameter variable">-Dmaven.test.skip</span><span class="token operator">=</span>true
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意：打包前在<code>rocketmq-console</code>中配置<code>namesrv</code>集群地址：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token assign-left variable">rocketmq.config.namesrvAddr</span><span class="token operator">=</span><span class="token number">192.168</span>.25.135:9876<span class="token punctuation">;</span><span class="token number">192.168</span>.25.138:9876
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>启动rocketmq-console：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">java</span> <span class="token parameter variable">-jar</span> rocketmq-console.jar
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>启动成功后，我们就可以通过浏览器访问<code>http://localhost:8080</code>进入控制台界面了，如下图：</p><p><img src="`+x+'" alt=""></p><p>集群状态：</p><p><img src="'+f+`" alt=""></p><h1 id="_4-消息发送样例" tabindex="-1"><a class="header-anchor" href="#_4-消息发送样例" aria-hidden="true">#</a> 4. 消息发送样例</h1><ul><li>导入MQ客户端依赖</li></ul><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.rocketmq<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>rocketmq-client<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>4.4.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>消息发送者步骤分析r</li></ul><div class="language-tex line-numbers-mode" data-ext="tex"><pre class="language-tex"><code>1.创建消息生产者producer，并制定生产者组名
2.指定Nameserver地址
3.启动producer
4.创建消息对象，指定主题Topic、Tag和消息体
5.发送消息
6.关闭生产者producer
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>消息消费者步骤分析</li></ul><div class="language-tex line-numbers-mode" data-ext="tex"><pre class="language-tex"><code>1.创建消费者Consumer，制定消费者组名
2.指定Nameserver地址
3.订阅主题Topic和Tag
4.设置回调函数，处理消息
5.启动消费者consumer
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-1-基本样例" tabindex="-1"><a class="header-anchor" href="#_4-1-基本样例" aria-hidden="true">#</a> 4.1 基本样例</h2><h3 id="_4-1-1-消息发送" tabindex="-1"><a class="header-anchor" href="#_4-1-1-消息发送" aria-hidden="true">#</a> 4.1.1 消息发送</h3><h4 id="_1-发送同步消息" tabindex="-1"><a class="header-anchor" href="#_1-发送同步消息" aria-hidden="true">#</a> 1）发送同步消息</h4><p>这种可靠性同步地发送方式使用的比较广泛，比如：重要的消息通知，短信通知。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SyncProducer</span> <span class="token punctuation">{</span>
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
    	<span class="token comment">// 实例化消息生产者Producer</span>
        <span class="token class-name">DefaultMQProducer</span> producer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultMQProducer</span><span class="token punctuation">(</span><span class="token string">&quot;please_rename_unique_group_name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    	<span class="token comment">// 设置NameServer的地址</span>
    	producer<span class="token punctuation">.</span><span class="token function">setNamesrvAddr</span><span class="token punctuation">(</span><span class="token string">&quot;localhost:9876&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    	<span class="token comment">// 启动Producer实例</span>
        producer<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    	    <span class="token comment">// 创建消息，并指定Topic，Tag和消息体</span>
    	    <span class="token class-name">Message</span> msg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Message</span><span class="token punctuation">(</span><span class="token string">&quot;TopicTest&quot;</span> <span class="token comment">/* Topic */</span><span class="token punctuation">,</span>
        	<span class="token string">&quot;TagA&quot;</span> <span class="token comment">/* Tag */</span><span class="token punctuation">,</span>
        	<span class="token punctuation">(</span><span class="token string">&quot;Hello RocketMQ &quot;</span> <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token class-name">RemotingHelper</span><span class="token punctuation">.</span><span class="token constant">DEFAULT_CHARSET</span><span class="token punctuation">)</span> <span class="token comment">/* Message body */</span>
        	<span class="token punctuation">)</span><span class="token punctuation">;</span>
        	<span class="token comment">// 发送消息到一个Broker</span>
            <span class="token class-name">SendResult</span> sendResult <span class="token operator">=</span> producer<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 通过sendResult返回消息是否成功送达</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%s%n&quot;</span><span class="token punctuation">,</span> sendResult<span class="token punctuation">)</span><span class="token punctuation">;</span>
    	<span class="token punctuation">}</span>
    	<span class="token comment">// 如果不再发送消息，关闭Producer实例。</span>
    	producer<span class="token punctuation">.</span><span class="token function">shutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-发送异步消息" tabindex="-1"><a class="header-anchor" href="#_2-发送异步消息" aria-hidden="true">#</a> 2）发送异步消息</h4><p>异步消息通常用在对响应时间敏感的业务场景，即发送端不能容忍长时间地等待Broker的响应。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AsyncProducer</span> <span class="token punctuation">{</span>
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
    	<span class="token comment">// 实例化消息生产者Producer</span>
        <span class="token class-name">DefaultMQProducer</span> producer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultMQProducer</span><span class="token punctuation">(</span><span class="token string">&quot;please_rename_unique_group_name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    	<span class="token comment">// 设置NameServer的地址</span>
        producer<span class="token punctuation">.</span><span class="token function">setNamesrvAddr</span><span class="token punctuation">(</span><span class="token string">&quot;localhost:9876&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    	<span class="token comment">// 启动Producer实例</span>
        producer<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        producer<span class="token punctuation">.</span><span class="token function">setRetryTimesWhenSendAsyncFailed</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">final</span> <span class="token keyword">int</span> index <span class="token operator">=</span> i<span class="token punctuation">;</span>
            	<span class="token comment">// 创建消息，并指定Topic，Tag和消息体</span>
                <span class="token class-name">Message</span> msg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Message</span><span class="token punctuation">(</span><span class="token string">&quot;TopicTest&quot;</span><span class="token punctuation">,</span>
                    <span class="token string">&quot;TagA&quot;</span><span class="token punctuation">,</span>
                    <span class="token string">&quot;OrderID188&quot;</span><span class="token punctuation">,</span>
                    <span class="token string">&quot;Hello world&quot;</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token class-name">RemotingHelper</span><span class="token punctuation">.</span><span class="token constant">DEFAULT_CHARSET</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// SendCallback接收异步返回结果的回调</span>
                producer<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>msg<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">SendCallback</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token annotation punctuation">@Override</span>
                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onSuccess</span><span class="token punctuation">(</span><span class="token class-name">SendResult</span> sendResult<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%-10d OK %s %n&quot;</span><span class="token punctuation">,</span> index<span class="token punctuation">,</span>
                            sendResult<span class="token punctuation">.</span><span class="token function">getMsgId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    <span class="token annotation punctuation">@Override</span>
                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onException</span><span class="token punctuation">(</span><span class="token class-name">Throwable</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      	              <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%-10d Exception %s %n&quot;</span><span class="token punctuation">,</span> index<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
      	              e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
            	<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    	<span class="token punctuation">}</span>
    	<span class="token comment">// 如果不再发送消息，关闭Producer实例。</span>
    	producer<span class="token punctuation">.</span><span class="token function">shutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-单向发送消息" tabindex="-1"><a class="header-anchor" href="#_3-单向发送消息" aria-hidden="true">#</a> 3）单向发送消息</h4><p>这种方式主要用在不特别关心发送结果的场景，例如日志发送。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OnewayProducer</span> <span class="token punctuation">{</span>
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span><span class="token punctuation">{</span>
    	<span class="token comment">// 实例化消息生产者Producer</span>
        <span class="token class-name">DefaultMQProducer</span> producer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultMQProducer</span><span class="token punctuation">(</span><span class="token string">&quot;please_rename_unique_group_name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    	<span class="token comment">// 设置NameServer的地址</span>
        producer<span class="token punctuation">.</span><span class="token function">setNamesrvAddr</span><span class="token punctuation">(</span><span class="token string">&quot;localhost:9876&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    	<span class="token comment">// 启动Producer实例</span>
        producer<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        	<span class="token comment">// 创建消息，并指定Topic，Tag和消息体</span>
        	<span class="token class-name">Message</span> msg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Message</span><span class="token punctuation">(</span><span class="token string">&quot;TopicTest&quot;</span> <span class="token comment">/* Topic */</span><span class="token punctuation">,</span>
                <span class="token string">&quot;TagA&quot;</span> <span class="token comment">/* Tag */</span><span class="token punctuation">,</span>
                <span class="token punctuation">(</span><span class="token string">&quot;Hello RocketMQ &quot;</span> <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token class-name">RemotingHelper</span><span class="token punctuation">.</span><span class="token constant">DEFAULT_CHARSET</span><span class="token punctuation">)</span> <span class="token comment">/* Message body */</span>
        	<span class="token punctuation">)</span><span class="token punctuation">;</span>
        	<span class="token comment">// 发送单向消息，没有任何返回结果</span>
        	producer<span class="token punctuation">.</span><span class="token function">sendOneway</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>

    	<span class="token punctuation">}</span>
    	<span class="token comment">// 如果不再发送消息，关闭Producer实例。</span>
    	producer<span class="token punctuation">.</span><span class="token function">shutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-1-2-消费消息" tabindex="-1"><a class="header-anchor" href="#_4-1-2-消费消息" aria-hidden="true">#</a> 4.1.2 消费消息</h3><h4 id="_1-负载均衡模式" tabindex="-1"><a class="header-anchor" href="#_1-负载均衡模式" aria-hidden="true">#</a> 1）负载均衡模式</h4><p>消费者采用负载均衡方式消费消息，多个消费者共同消费队列消息，每个消费者处理的消息不同</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
    <span class="token comment">// 实例化消息生产者,指定组名</span>
    <span class="token class-name">DefaultMQPushConsumer</span> consumer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultMQPushConsumer</span><span class="token punctuation">(</span><span class="token string">&quot;group1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 指定Namesrv地址信息.</span>
    consumer<span class="token punctuation">.</span><span class="token function">setNamesrvAddr</span><span class="token punctuation">(</span><span class="token string">&quot;localhost:9876&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 订阅Topic</span>
    consumer<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token string">&quot;Test&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//负载均衡模式消费</span>
    consumer<span class="token punctuation">.</span><span class="token function">setMessageModel</span><span class="token punctuation">(</span><span class="token class-name">MessageModel</span><span class="token punctuation">.</span><span class="token constant">CLUSTERING</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 注册回调函数，处理消息</span>
    consumer<span class="token punctuation">.</span><span class="token function">registerMessageListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MessageListenerConcurrently</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token class-name">ConsumeConcurrentlyStatus</span> <span class="token function">consumeMessage</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MessageExt</span><span class="token punctuation">&gt;</span></span> msgs<span class="token punctuation">,</span>
                                                        <span class="token class-name">ConsumeConcurrentlyContext</span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%s Receive New Messages: %s %n&quot;</span><span class="token punctuation">,</span> 
                              <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> msgs<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token class-name">ConsumeConcurrentlyStatus</span><span class="token punctuation">.</span><span class="token constant">CONSUME_SUCCESS</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//启动消息者</span>
    consumer<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;Consumer Started.%n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-广播模式" tabindex="-1"><a class="header-anchor" href="#_2-广播模式" aria-hidden="true">#</a> 2）广播模式</h4><p>消费者采用广播的方式消费消息，每个消费者消费的消息都是相同的</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
    <span class="token comment">// 实例化消息生产者,指定组名</span>
    <span class="token class-name">DefaultMQPushConsumer</span> consumer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultMQPushConsumer</span><span class="token punctuation">(</span><span class="token string">&quot;group1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 指定Namesrv地址信息.</span>
    consumer<span class="token punctuation">.</span><span class="token function">setNamesrvAddr</span><span class="token punctuation">(</span><span class="token string">&quot;localhost:9876&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 订阅Topic</span>
    consumer<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token string">&quot;Test&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//广播模式消费</span>
    consumer<span class="token punctuation">.</span><span class="token function">setMessageModel</span><span class="token punctuation">(</span><span class="token class-name">MessageModel</span><span class="token punctuation">.</span><span class="token constant">BROADCASTING</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 注册回调函数，处理消息</span>
    consumer<span class="token punctuation">.</span><span class="token function">registerMessageListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MessageListenerConcurrently</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token class-name">ConsumeConcurrentlyStatus</span> <span class="token function">consumeMessage</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MessageExt</span><span class="token punctuation">&gt;</span></span> msgs<span class="token punctuation">,</span>
                                                        <span class="token class-name">ConsumeConcurrentlyContext</span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%s Receive New Messages: %s %n&quot;</span><span class="token punctuation">,</span> 
                              <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> msgs<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token class-name">ConsumeConcurrentlyStatus</span><span class="token punctuation">.</span><span class="token constant">CONSUME_SUCCESS</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//启动消息者</span>
    consumer<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;Consumer Started.%n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-2-顺序消息" tabindex="-1"><a class="header-anchor" href="#_4-2-顺序消息" aria-hidden="true">#</a> 4.2 顺序消息</h2><p>消息有序指的是可以按照消息的发送顺序来消费(FIFO)。RocketMQ可以严格的保证消息有序，可以分为分区有序或者全局有序。</p><p>顺序消费的原理解析，在默认的情况下消息发送会采取Round Robin轮询方式把消息发送到不同的queue(分区队列)；而消费消息的时候从多个queue上拉取消息，这种情况发送和消费是不能保证顺序。但是如果控制发送的顺序消息只依次发送到同一个queue中，消费的时候只从这个queue上依次拉取，则就保证了顺序。当发送和消费参与的queue只有一个，则是全局有序；如果多个queue参与，则为分区有序，即相对每个queue，消息都是有序的。</p><p>下面用订单进行分区有序的示例。一个订单的顺序流程是：创建、付款、推送、完成。订单号相同的消息会被先后发送到同一个队列中，消费时，同一个OrderId获取到的肯定是同一个队列。</p><h3 id="_4-2-1-顺序消息生产" tabindex="-1"><a class="header-anchor" href="#_4-2-1-顺序消息生产" aria-hidden="true">#</a> 4.2.1 顺序消息生产</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
* Producer，发送顺序消息
*/</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Producer</span> <span class="token punctuation">{</span>

   <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
       <span class="token class-name">DefaultMQProducer</span> producer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultMQProducer</span><span class="token punctuation">(</span><span class="token string">&quot;please_rename_unique_group_name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

       producer<span class="token punctuation">.</span><span class="token function">setNamesrvAddr</span><span class="token punctuation">(</span><span class="token string">&quot;127.0.0.1:9876&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

       producer<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

       <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> tags <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token string">&quot;TagA&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;TagC&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;TagD&quot;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

       <span class="token comment">// 订单列表</span>
       <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">OrderStep</span><span class="token punctuation">&gt;</span></span> orderList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Producer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">buildOrders</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

       <span class="token class-name">Date</span> date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token class-name">SimpleDateFormat</span> sdf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleDateFormat</span><span class="token punctuation">(</span><span class="token string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token class-name">String</span> dateStr <span class="token operator">=</span> sdf<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>date<span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
           <span class="token comment">// 加个时间前缀</span>
           <span class="token class-name">String</span> body <span class="token operator">=</span> dateStr <span class="token operator">+</span> <span class="token string">&quot; Hello RocketMQ &quot;</span> <span class="token operator">+</span> orderList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
           <span class="token class-name">Message</span> msg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Message</span><span class="token punctuation">(</span><span class="token string">&quot;TopicTest&quot;</span><span class="token punctuation">,</span> tags<span class="token punctuation">[</span>i <span class="token operator">%</span> tags<span class="token punctuation">.</span>length<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&quot;KEY&quot;</span> <span class="token operator">+</span> i<span class="token punctuation">,</span> body<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

           <span class="token class-name">SendResult</span> sendResult <span class="token operator">=</span> producer<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>msg<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">MessageQueueSelector</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
               <span class="token annotation punctuation">@Override</span>
               <span class="token keyword">public</span> <span class="token class-name">MessageQueue</span> <span class="token function">select</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MessageQueue</span><span class="token punctuation">&gt;</span></span> mqs<span class="token punctuation">,</span> <span class="token class-name">Message</span> msg<span class="token punctuation">,</span> <span class="token class-name">Object</span> arg<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                   <span class="token class-name">Long</span> id <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Long</span><span class="token punctuation">)</span> arg<span class="token punctuation">;</span>  <span class="token comment">//根据订单id选择发送queue</span>
                   <span class="token keyword">long</span> index <span class="token operator">=</span> id <span class="token operator">%</span> mqs<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                   <span class="token keyword">return</span> mqs<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> index<span class="token punctuation">)</span><span class="token punctuation">;</span>
               <span class="token punctuation">}</span>
           <span class="token punctuation">}</span><span class="token punctuation">,</span> orderList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getOrderId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//订单id</span>

           <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;SendResult status:%s, queueId:%d, body:%s&quot;</span><span class="token punctuation">,</span>
               sendResult<span class="token punctuation">.</span><span class="token function">getSendStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
               sendResult<span class="token punctuation">.</span><span class="token function">getMessageQueue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getQueueId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
               body<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token punctuation">}</span>

       producer<span class="token punctuation">.</span><span class="token function">shutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>

   <span class="token doc-comment comment">/**
    * 订单的步骤
    */</span>
   <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">OrderStep</span> <span class="token punctuation">{</span>
       <span class="token keyword">private</span> <span class="token keyword">long</span> orderId<span class="token punctuation">;</span>
       <span class="token keyword">private</span> <span class="token class-name">String</span> desc<span class="token punctuation">;</span>

       <span class="token keyword">public</span> <span class="token keyword">long</span> <span class="token function">getOrderId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
           <span class="token keyword">return</span> orderId<span class="token punctuation">;</span>
       <span class="token punctuation">}</span>

       <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setOrderId</span><span class="token punctuation">(</span><span class="token keyword">long</span> orderId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
           <span class="token keyword">this</span><span class="token punctuation">.</span>orderId <span class="token operator">=</span> orderId<span class="token punctuation">;</span>
       <span class="token punctuation">}</span>

       <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getDesc</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
           <span class="token keyword">return</span> desc<span class="token punctuation">;</span>
       <span class="token punctuation">}</span>

       <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setDesc</span><span class="token punctuation">(</span><span class="token class-name">String</span> desc<span class="token punctuation">)</span> <span class="token punctuation">{</span>
           <span class="token keyword">this</span><span class="token punctuation">.</span>desc <span class="token operator">=</span> desc<span class="token punctuation">;</span>
       <span class="token punctuation">}</span>

       <span class="token annotation punctuation">@Override</span>
       <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
           <span class="token keyword">return</span> <span class="token string">&quot;OrderStep{&quot;</span> <span class="token operator">+</span>
               <span class="token string">&quot;orderId=&quot;</span> <span class="token operator">+</span> orderId <span class="token operator">+</span>
               <span class="token string">&quot;, desc=&#39;&quot;</span> <span class="token operator">+</span> desc <span class="token operator">+</span> <span class="token char">&#39;\\&#39;&#39;</span> <span class="token operator">+</span>
               <span class="token char">&#39;}&#39;</span><span class="token punctuation">;</span>
       <span class="token punctuation">}</span>
   <span class="token punctuation">}</span>

   <span class="token doc-comment comment">/**
    * 生成模拟订单数据
    */</span>
   <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">OrderStep</span><span class="token punctuation">&gt;</span></span> <span class="token function">buildOrders</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
       <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">OrderStep</span><span class="token punctuation">&gt;</span></span> orderList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">OrderStep</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

       <span class="token class-name">OrderStep</span> orderDemo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OrderStep</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       orderDemo<span class="token punctuation">.</span><span class="token function">setOrderId</span><span class="token punctuation">(</span><span class="token number">15103111039L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       orderDemo<span class="token punctuation">.</span><span class="token function">setDesc</span><span class="token punctuation">(</span><span class="token string">&quot;创建&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       orderList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>orderDemo<span class="token punctuation">)</span><span class="token punctuation">;</span>

       orderDemo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OrderStep</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       orderDemo<span class="token punctuation">.</span><span class="token function">setOrderId</span><span class="token punctuation">(</span><span class="token number">15103111065L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       orderDemo<span class="token punctuation">.</span><span class="token function">setDesc</span><span class="token punctuation">(</span><span class="token string">&quot;创建&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       orderList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>orderDemo<span class="token punctuation">)</span><span class="token punctuation">;</span>

       orderDemo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OrderStep</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       orderDemo<span class="token punctuation">.</span><span class="token function">setOrderId</span><span class="token punctuation">(</span><span class="token number">15103111039L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       orderDemo<span class="token punctuation">.</span><span class="token function">setDesc</span><span class="token punctuation">(</span><span class="token string">&quot;付款&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       orderList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>orderDemo<span class="token punctuation">)</span><span class="token punctuation">;</span>

       orderDemo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OrderStep</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       orderDemo<span class="token punctuation">.</span><span class="token function">setOrderId</span><span class="token punctuation">(</span><span class="token number">15103117235L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       orderDemo<span class="token punctuation">.</span><span class="token function">setDesc</span><span class="token punctuation">(</span><span class="token string">&quot;创建&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       orderList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>orderDemo<span class="token punctuation">)</span><span class="token punctuation">;</span>

       orderDemo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OrderStep</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       orderDemo<span class="token punctuation">.</span><span class="token function">setOrderId</span><span class="token punctuation">(</span><span class="token number">15103111065L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       orderDemo<span class="token punctuation">.</span><span class="token function">setDesc</span><span class="token punctuation">(</span><span class="token string">&quot;付款&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       orderList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>orderDemo<span class="token punctuation">)</span><span class="token punctuation">;</span>

       orderDemo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OrderStep</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       orderDemo<span class="token punctuation">.</span><span class="token function">setOrderId</span><span class="token punctuation">(</span><span class="token number">15103117235L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       orderDemo<span class="token punctuation">.</span><span class="token function">setDesc</span><span class="token punctuation">(</span><span class="token string">&quot;付款&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       orderList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>orderDemo<span class="token punctuation">)</span><span class="token punctuation">;</span>

       orderDemo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OrderStep</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       orderDemo<span class="token punctuation">.</span><span class="token function">setOrderId</span><span class="token punctuation">(</span><span class="token number">15103111065L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       orderDemo<span class="token punctuation">.</span><span class="token function">setDesc</span><span class="token punctuation">(</span><span class="token string">&quot;完成&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       orderList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>orderDemo<span class="token punctuation">)</span><span class="token punctuation">;</span>

       orderDemo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OrderStep</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       orderDemo<span class="token punctuation">.</span><span class="token function">setOrderId</span><span class="token punctuation">(</span><span class="token number">15103111039L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       orderDemo<span class="token punctuation">.</span><span class="token function">setDesc</span><span class="token punctuation">(</span><span class="token string">&quot;推送&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       orderList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>orderDemo<span class="token punctuation">)</span><span class="token punctuation">;</span>

       orderDemo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OrderStep</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       orderDemo<span class="token punctuation">.</span><span class="token function">setOrderId</span><span class="token punctuation">(</span><span class="token number">15103117235L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       orderDemo<span class="token punctuation">.</span><span class="token function">setDesc</span><span class="token punctuation">(</span><span class="token string">&quot;完成&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       orderList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>orderDemo<span class="token punctuation">)</span><span class="token punctuation">;</span>

       orderDemo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OrderStep</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       orderDemo<span class="token punctuation">.</span><span class="token function">setOrderId</span><span class="token punctuation">(</span><span class="token number">15103111039L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       orderDemo<span class="token punctuation">.</span><span class="token function">setDesc</span><span class="token punctuation">(</span><span class="token string">&quot;完成&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       orderList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>orderDemo<span class="token punctuation">)</span><span class="token punctuation">;</span>

       <span class="token keyword">return</span> orderList<span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-2-2-顺序消费消息" tabindex="-1"><a class="header-anchor" href="#_4-2-2-顺序消费消息" aria-hidden="true">#</a> 4.2.2 顺序消费消息</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
* 顺序消息消费，带事务方式（应用可控制Offset什么时候提交）
*/</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ConsumerInOrder</span> <span class="token punctuation">{</span>

   <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
       <span class="token class-name">DefaultMQPushConsumer</span> consumer <span class="token operator">=</span> <span class="token keyword">new</span> 
           <span class="token class-name">DefaultMQPushConsumer</span><span class="token punctuation">(</span><span class="token string">&quot;please_rename_unique_group_name_3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       consumer<span class="token punctuation">.</span><span class="token function">setNamesrvAddr</span><span class="token punctuation">(</span><span class="token string">&quot;127.0.0.1:9876&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token doc-comment comment">/**
        * 设置Consumer第一次启动是从队列头部开始消费还是队列尾部开始消费<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">&gt;</span></span>
        * 如果非第一次启动，那么按照上次消费的位置继续消费
        */</span>
       consumer<span class="token punctuation">.</span><span class="token function">setConsumeFromWhere</span><span class="token punctuation">(</span><span class="token class-name">ConsumeFromWhere</span><span class="token punctuation">.</span><span class="token constant">CONSUME_FROM_FIRST_OFFSET</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

       consumer<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token string">&quot;TopicTest&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;TagA || TagC || TagD&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

       consumer<span class="token punctuation">.</span><span class="token function">registerMessageListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MessageListenerOrderly</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

           <span class="token class-name">Random</span> random <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

           <span class="token annotation punctuation">@Override</span>
           <span class="token keyword">public</span> <span class="token class-name">ConsumeOrderlyStatus</span> <span class="token function">consumeMessage</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MessageExt</span><span class="token punctuation">&gt;</span></span> msgs<span class="token punctuation">,</span> <span class="token class-name">ConsumeOrderlyContext</span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
               context<span class="token punctuation">.</span><span class="token function">setAutoCommit</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
               <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">MessageExt</span> msg <span class="token operator">:</span> msgs<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                   <span class="token comment">// 可以看到每个queue有唯一的consume线程来消费, 订单对每个queue(分区)有序</span>
                   <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;consumeThread=&quot;</span> <span class="token operator">+</span> <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;queueId=&quot;</span> <span class="token operator">+</span> msg<span class="token punctuation">.</span><span class="token function">getQueueId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;, content:&quot;</span> <span class="token operator">+</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
               <span class="token punctuation">}</span>

               <span class="token keyword">try</span> <span class="token punctuation">{</span>
                   <span class="token comment">//模拟业务逻辑处理中...</span>
                   <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">SECONDS</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span>random<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
               <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                   e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
               <span class="token punctuation">}</span>
               <span class="token keyword">return</span> <span class="token class-name">ConsumeOrderlyStatus</span><span class="token punctuation">.</span><span class="token constant">SUCCESS</span><span class="token punctuation">;</span>
           <span class="token punctuation">}</span>
       <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

       consumer<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

       <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Consumer Started.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-3-延时消息" tabindex="-1"><a class="header-anchor" href="#_4-3-延时消息" aria-hidden="true">#</a> 4.3 延时消息</h2><p>比如电商里，提交了一个订单就可以发送一个延时消息，1h后去检查这个订单的状态，如果还是未付款就取消订单释放库存。</p><h3 id="_4-3-1-启动消息消费者" tabindex="-1"><a class="header-anchor" href="#_4-3-1-启动消息消费者" aria-hidden="true">#</a> 4.3.1 启动消息消费者</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ScheduledMessageConsumer</span> <span class="token punctuation">{</span>
   <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
      <span class="token comment">// 实例化消费者</span>
      <span class="token class-name">DefaultMQPushConsumer</span> consumer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultMQPushConsumer</span><span class="token punctuation">(</span><span class="token string">&quot;ExampleConsumer&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// 订阅Topics</span>
      consumer<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token string">&quot;TestTopic&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// 注册消息监听者</span>
      consumer<span class="token punctuation">.</span><span class="token function">registerMessageListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MessageListenerConcurrently</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token annotation punctuation">@Override</span>
          <span class="token keyword">public</span> <span class="token class-name">ConsumeConcurrentlyStatus</span> <span class="token function">consumeMessage</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MessageExt</span><span class="token punctuation">&gt;</span></span> messages<span class="token punctuation">,</span> <span class="token class-name">ConsumeConcurrentlyContext</span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">MessageExt</span> message <span class="token operator">:</span> messages<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                  <span class="token comment">// Print approximate delay time period</span>
                  <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Receive message[msgId=&quot;</span> <span class="token operator">+</span> message<span class="token punctuation">.</span><span class="token function">getMsgId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;] &quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> message<span class="token punctuation">.</span><span class="token function">getStoreTimestamp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;ms later&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
              <span class="token punctuation">}</span>
              <span class="token keyword">return</span> <span class="token class-name">ConsumeConcurrentlyStatus</span><span class="token punctuation">.</span><span class="token constant">CONSUME_SUCCESS</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// 启动消费者</span>
      consumer<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-3-2-发送延时消息" tabindex="-1"><a class="header-anchor" href="#_4-3-2-发送延时消息" aria-hidden="true">#</a> 4.3.2 发送延时消息</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ScheduledMessageProducer</span> <span class="token punctuation">{</span>
   <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
      <span class="token comment">// 实例化一个生产者来产生延时消息</span>
      <span class="token class-name">DefaultMQProducer</span> producer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultMQProducer</span><span class="token punctuation">(</span><span class="token string">&quot;ExampleProducerGroup&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// 启动生产者</span>
      producer<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">int</span> totalMessagesToSend <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> totalMessagesToSend<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token class-name">Message</span> message <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Message</span><span class="token punctuation">(</span><span class="token string">&quot;TestTopic&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&quot;Hello scheduled message &quot;</span> <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token comment">// 设置延时等级3,这个消息将在10s之后发送(现在只支持固定的几个时间,详看delayTimeLevel)</span>
          message<span class="token punctuation">.</span><span class="token function">setDelayTimeLevel</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token comment">// 发送消息</span>
          producer<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
       <span class="token comment">// 关闭生产者</span>
      producer<span class="token punctuation">.</span><span class="token function">shutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>###4.3.3 验证</p><p>您将会看到消息的消费比存储时间晚10秒</p><h3 id="_4-3-4-使用限制" tabindex="-1"><a class="header-anchor" href="#_4-3-4-使用限制" aria-hidden="true">#</a> 4.3.4 使用限制</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// org/apache/rocketmq/store/config/MessageStoreConfig.java</span>
<span class="token keyword">private</span> <span class="token class-name">String</span> messageDelayLevel <span class="token operator">=</span> <span class="token string">&quot;1s 5s 10s 30s 1m 2m 3m 4m 5m 6m 7m 8m 9m 10m 20m 30m 1h 2h&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>现在RocketMq并不支持任意时间的延时，需要设置几个固定的延时等级，从1s到2h分别对应着等级1到18</p><h2 id="_4-4-批量消息" tabindex="-1"><a class="header-anchor" href="#_4-4-批量消息" aria-hidden="true">#</a> 4.4 批量消息</h2><p>批量发送消息能显著提高传递小消息的性能。限制是这些批量消息应该有相同的topic，相同的waitStoreMsgOK，而且不能是延时消息。此外，这一批消息的总大小不应超过4MB。</p><h3 id="_4-4-1-发送批量消息" tabindex="-1"><a class="header-anchor" href="#_4-4-1-发送批量消息" aria-hidden="true">#</a> 4.4.1 发送批量消息</h3><p>如果您每次只发送不超过4MB的消息，则很容易使用批处理，样例如下：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">String</span> topic <span class="token operator">=</span> <span class="token string">&quot;BatchTest&quot;</span><span class="token punctuation">;</span>
<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Message</span><span class="token punctuation">&gt;</span></span> messages <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
messages<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Message</span><span class="token punctuation">(</span>topic<span class="token punctuation">,</span> <span class="token string">&quot;TagA&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;OrderID001&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Hello world 0&quot;</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
messages<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Message</span><span class="token punctuation">(</span>topic<span class="token punctuation">,</span> <span class="token string">&quot;TagA&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;OrderID002&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Hello world 1&quot;</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
messages<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Message</span><span class="token punctuation">(</span>topic<span class="token punctuation">,</span> <span class="token string">&quot;TagA&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;OrderID003&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Hello world 2&quot;</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">try</span> <span class="token punctuation">{</span>
   producer<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>messages<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
   e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token comment">//处理error</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果消息的总长度可能大于4MB时，这时候最好把消息进行分割</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ListSplitter</span> <span class="token keyword">implements</span> <span class="token class-name">Iterator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Message</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
   <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">SIZE_LIMIT</span> <span class="token operator">=</span> <span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">4</span><span class="token punctuation">;</span>
   <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Message</span><span class="token punctuation">&gt;</span></span> messages<span class="token punctuation">;</span>
   <span class="token keyword">private</span> <span class="token keyword">int</span> currIndex<span class="token punctuation">;</span>
   <span class="token keyword">public</span> <span class="token class-name">ListSplitter</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Message</span><span class="token punctuation">&gt;</span></span> messages<span class="token punctuation">)</span> <span class="token punctuation">{</span>
           <span class="token keyword">this</span><span class="token punctuation">.</span>messages <span class="token operator">=</span> messages<span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Override</span> 
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
       <span class="token keyword">return</span> currIndex <span class="token operator">&lt;</span> messages<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
   	<span class="token annotation punctuation">@Override</span> 
    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Message</span><span class="token punctuation">&gt;</span></span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
       <span class="token keyword">int</span> nextIndex <span class="token operator">=</span> currIndex<span class="token punctuation">;</span>
       <span class="token keyword">int</span> totalSize <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
       <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span> nextIndex <span class="token operator">&lt;</span> messages<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> nextIndex<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
           <span class="token class-name">Message</span> message <span class="token operator">=</span> messages<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>nextIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
           <span class="token keyword">int</span> tmpSize <span class="token operator">=</span> message<span class="token punctuation">.</span><span class="token function">getTopic</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> message<span class="token punctuation">.</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>
           <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> properties <span class="token operator">=</span> message<span class="token punctuation">.</span><span class="token function">getProperties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> entry <span class="token operator">:</span> properties<span class="token punctuation">.</span><span class="token function">entrySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
               tmpSize <span class="token operator">+=</span> entry<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> entry<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           <span class="token punctuation">}</span>
           tmpSize <span class="token operator">=</span> tmpSize <span class="token operator">+</span> <span class="token number">20</span><span class="token punctuation">;</span> <span class="token comment">// 增加日志的开销20字节</span>
           <span class="token keyword">if</span> <span class="token punctuation">(</span>tmpSize <span class="token operator">&gt;</span> <span class="token constant">SIZE_LIMIT</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
               <span class="token comment">//单个消息超过了最大的限制</span>
               <span class="token comment">//忽略,否则会阻塞分裂的进程</span>
               <span class="token keyword">if</span> <span class="token punctuation">(</span>nextIndex <span class="token operator">-</span> currIndex <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                  <span class="token comment">//假如下一个子列表没有元素,则添加这个子列表然后退出循环,否则只是退出循环</span>
                  nextIndex<span class="token operator">++</span><span class="token punctuation">;</span>
               <span class="token punctuation">}</span>
               <span class="token keyword">break</span><span class="token punctuation">;</span>
           <span class="token punctuation">}</span>
           <span class="token keyword">if</span> <span class="token punctuation">(</span>tmpSize <span class="token operator">+</span> totalSize <span class="token operator">&gt;</span> <span class="token constant">SIZE_LIMIT</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
               <span class="token keyword">break</span><span class="token punctuation">;</span>
           <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
               totalSize <span class="token operator">+=</span> tmpSize<span class="token punctuation">;</span>
           <span class="token punctuation">}</span>

       <span class="token punctuation">}</span>
       <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Message</span><span class="token punctuation">&gt;</span></span> subList <span class="token operator">=</span> messages<span class="token punctuation">.</span><span class="token function">subList</span><span class="token punctuation">(</span>currIndex<span class="token punctuation">,</span> nextIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
       currIndex <span class="token operator">=</span> nextIndex<span class="token punctuation">;</span>
       <span class="token keyword">return</span> subList<span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">//把大的消息分裂成若干个小的消息</span>
<span class="token class-name">ListSplitter</span> splitter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ListSplitter</span><span class="token punctuation">(</span>messages<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">while</span> <span class="token punctuation">(</span>splitter<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Message</span><span class="token punctuation">&gt;</span></span>  listItem <span class="token operator">=</span> splitter<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      producer<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>listItem<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">//处理error</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-5-过滤消息" tabindex="-1"><a class="header-anchor" href="#_4-5-过滤消息" aria-hidden="true">#</a> 4.5 过滤消息</h2><p>在大多数情况下，TAG是一个简单而有用的设计，其可以来选择您想要的消息。例如：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">DefaultMQPushConsumer</span> consumer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultMQPushConsumer</span><span class="token punctuation">(</span><span class="token string">&quot;CID_EXAMPLE&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
consumer<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token string">&quot;TOPIC&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;TAGA || TAGB || TAGC&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>消费者将接收包含TAGA或TAGB或TAGC的消息。但是限制是一个消息只能有一个标签，这对于复杂的场景可能不起作用。在这种情况下，可以使用SQL表达式筛选消息。SQL特性可以通过发送消息时的属性来进行计算。在RocketMQ定义的语法下，可以实现一些简单的逻辑。下面是一个例子：</p><div class="language-te line-numbers-mode" data-ext="te"><pre class="language-te"><code>------------
| message  |
|----------|  a &gt; 5 AND b = &#39;abc&#39;
| a = 10   |  --------------------&gt; Gotten
| b = &#39;abc&#39;|
| c = true |
------------
------------
| message  |
|----------|   a &gt; 5 AND b = &#39;abc&#39;
| a = 1    |  --------------------&gt; Missed
| b = &#39;abc&#39;|
| c = true |
------------
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-5-1-sql基本语法" tabindex="-1"><a class="header-anchor" href="#_4-5-1-sql基本语法" aria-hidden="true">#</a> 4.5.1 SQL基本语法</h3><p>RocketMQ只定义了一些基本语法来支持这个特性。你也可以很容易地扩展它。</p><ul><li>数值比较，比如：<strong>&gt;，&gt;=，&lt;，&lt;=，BETWEEN，=；</strong></li><li>字符比较，比如：<strong>=，&lt;&gt;，IN；</strong></li><li><strong>IS NULL</strong> 或者 <strong>IS NOT NULL；</strong></li><li>逻辑符号 <strong>AND，OR，NOT；</strong></li></ul><p>常量支持类型为：</p><ul><li>数值，比如：<strong>123，3.1415；</strong></li><li>字符，比如：<strong>&#39;abc&#39;，必须用单引号包裹起来；</strong></li><li><strong>NULL</strong>，特殊的常量</li><li>布尔值，<strong>TRUE</strong> 或 <strong>FALSE</strong></li></ul><p>只有使用push模式的消费者才能用使用SQL92标准的sql语句，接口如下：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">subscribe</span><span class="token punctuation">(</span>finalString topic<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">MessageSelector</span> messageSelector<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_4-5-2-消息生产者" tabindex="-1"><a class="header-anchor" href="#_4-5-2-消息生产者" aria-hidden="true">#</a> 4.5.2 消息生产者</h3><p>发送消息时，你能通过<code>putUserProperty</code>来设置消息的属性</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">DefaultMQProducer</span> producer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultMQProducer</span><span class="token punctuation">(</span><span class="token string">&quot;please_rename_unique_group_name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
producer<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Message</span> msg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Message</span><span class="token punctuation">(</span><span class="token string">&quot;TopicTest&quot;</span><span class="token punctuation">,</span>
   tag<span class="token punctuation">,</span>
   <span class="token punctuation">(</span><span class="token string">&quot;Hello RocketMQ &quot;</span> <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token class-name">RemotingHelper</span><span class="token punctuation">.</span><span class="token constant">DEFAULT_CHARSET</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 设置一些属性</span>
msg<span class="token punctuation">.</span><span class="token function">putUserProperty</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">SendResult</span> sendResult <span class="token operator">=</span> producer<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>

producer<span class="token punctuation">.</span><span class="token function">shutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-5-3-消息消费者" tabindex="-1"><a class="header-anchor" href="#_4-5-3-消息消费者" aria-hidden="true">#</a> 4.5.3 消息消费者</h3><p>用MessageSelector.bySql来使用sql筛选消息</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">DefaultMQPushConsumer</span> consumer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultMQPushConsumer</span><span class="token punctuation">(</span><span class="token string">&quot;please_rename_unique_group_name_4&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 只有订阅的消息有这个属性a, a &gt;=0 and a &lt;= 3</span>
consumer<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token string">&quot;TopicTest&quot;</span><span class="token punctuation">,</span> <span class="token class-name">MessageSelector</span><span class="token punctuation">.</span><span class="token function">bySql</span><span class="token punctuation">(</span><span class="token string">&quot;a between 0 and 3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
consumer<span class="token punctuation">.</span><span class="token function">registerMessageListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MessageListenerConcurrently</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token annotation punctuation">@Override</span>
   <span class="token keyword">public</span> <span class="token class-name">ConsumeConcurrentlyStatus</span> <span class="token function">consumeMessage</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MessageExt</span><span class="token punctuation">&gt;</span></span> msgs<span class="token punctuation">,</span> <span class="token class-name">ConsumeConcurrentlyContext</span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
       <span class="token keyword">return</span> <span class="token class-name">ConsumeConcurrentlyStatus</span><span class="token punctuation">.</span><span class="token constant">CONSUME_SUCCESS</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
consumer<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-6-事务消息" tabindex="-1"><a class="header-anchor" href="#_4-6-事务消息" aria-hidden="true">#</a> 4.6 事务消息</h2><p>###4.6.1 流程分析</p><p><img src="`+q+`" alt=""></p><p>上图说明了事务消息的大致方案，其中分为两个流程：正常事务消息的发送及提交、事务消息的补偿流程。</p><p>####1）事务消息发送及提交</p><p>(1) 发送消息（half消息）。</p><p>(2) 服务端响应消息写入结果。</p><p>(3) 根据发送结果执行本地事务（如果写入失败，此时half消息对业务不可见，本地逻辑不执行）。</p><p>(4) 根据本地事务状态执行Commit或者Rollback（Commit操作生成消息索引，消息对消费者可见）</p><h4 id="_2-事务补偿" tabindex="-1"><a class="header-anchor" href="#_2-事务补偿" aria-hidden="true">#</a> 2）事务补偿</h4><p>(1) 对没有Commit/Rollback的事务消息（pending状态的消息），从服务端发起一次“回查”</p><p>(2) Producer收到回查消息，检查回查消息对应的本地事务的状态</p><p>(3) 根据本地事务状态，重新Commit或者Rollback</p><p>其中，补偿阶段用于解决消息Commit或者Rollback发生超时或者失败的情况。</p><h4 id="_3-事务消息状态" tabindex="-1"><a class="header-anchor" href="#_3-事务消息状态" aria-hidden="true">#</a> 3）事务消息状态</h4><p>事务消息共有三种状态，提交状态、回滚状态、中间状态：</p><ul><li>TransactionStatus.CommitTransaction: 提交事务，它允许消费者消费此消息。</li><li>TransactionStatus.RollbackTransaction: 回滚事务，它代表该消息将被删除，不允许被消费。</li><li>TransactionStatus.Unknown: 中间状态，它代表需要检查消息队列来确定状态。</li></ul><p>###4.6.1 发送事务消息</p><h4 id="_1-创建事务性生产者" tabindex="-1"><a class="header-anchor" href="#_1-创建事务性生产者" aria-hidden="true">#</a> 1) 创建事务性生产者</h4><p>使用 <code>TransactionMQProducer</code>类创建生产者，并指定唯一的 <code>ProducerGroup</code>，就可以设置自定义线程池来处理这些检查请求。执行本地事务后、需要根据执行结果对消息队列进行回复。回传的事务状态在请参考前一节。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Producer</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">MQClientException</span><span class="token punctuation">,</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
        <span class="token comment">//创建事务监听器</span>
        <span class="token class-name">TransactionListener</span> transactionListener <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TransactionListenerImpl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//创建消息生产者</span>
        <span class="token class-name">TransactionMQProducer</span> producer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TransactionMQProducer</span><span class="token punctuation">(</span><span class="token string">&quot;group6&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        producer<span class="token punctuation">.</span><span class="token function">setNamesrvAddr</span><span class="token punctuation">(</span><span class="token string">&quot;192.168.25.135:9876;192.168.25.138:9876&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//生产者这是监听器</span>
        producer<span class="token punctuation">.</span><span class="token function">setTransactionListener</span><span class="token punctuation">(</span>transactionListener<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//启动消息生产者</span>
        producer<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> tags <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token string">&quot;TagA&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;TagB&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;TagC&quot;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token class-name">Message</span> msg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Message</span><span class="token punctuation">(</span><span class="token string">&quot;TransactionTopic&quot;</span><span class="token punctuation">,</span> tags<span class="token punctuation">[</span>i <span class="token operator">%</span> tags<span class="token punctuation">.</span>length<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&quot;KEY&quot;</span> <span class="token operator">+</span> i<span class="token punctuation">,</span>
                        <span class="token punctuation">(</span><span class="token string">&quot;Hello RocketMQ &quot;</span> <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token class-name">RemotingHelper</span><span class="token punctuation">.</span><span class="token constant">DEFAULT_CHARSET</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">SendResult</span> sendResult <span class="token operator">=</span> producer<span class="token punctuation">.</span><span class="token function">sendMessageInTransaction</span><span class="token punctuation">(</span>msg<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%s%n&quot;</span><span class="token punctuation">,</span> sendResult<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">SECONDS</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">MQClientException</span> <span class="token operator">|</span> <span class="token class-name">UnsupportedEncodingException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token comment">//producer.shutdown();</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-实现事务的监听接口" tabindex="-1"><a class="header-anchor" href="#_2-实现事务的监听接口" aria-hidden="true">#</a> 2）实现事务的监听接口</h4><p>当发送半消息成功时，我们使用 <code>executeLocalTransaction</code> 方法来执行本地事务。它返回前一节中提到的三个事务状态之一。<code>checkLocalTranscation</code> 方法用于检查本地事务状态，并回应消息队列的检查请求。它也是返回前一节中提到的三个事务状态之一。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TransactionListenerImpl</span> <span class="token keyword">implements</span> <span class="token class-name">TransactionListener</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">LocalTransactionState</span> <span class="token function">executeLocalTransaction</span><span class="token punctuation">(</span><span class="token class-name">Message</span> msg<span class="token punctuation">,</span> <span class="token class-name">Object</span> arg<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;执行本地事务&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;TagA&quot;</span><span class="token punctuation">,</span> msg<span class="token punctuation">.</span><span class="token function">getTags</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token class-name">LocalTransactionState</span><span class="token punctuation">.</span><span class="token constant">COMMIT_MESSAGE</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;TagB&quot;</span><span class="token punctuation">,</span> msg<span class="token punctuation">.</span><span class="token function">getTags</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token class-name">LocalTransactionState</span><span class="token punctuation">.</span><span class="token constant">ROLLBACK_MESSAGE</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token class-name">LocalTransactionState</span><span class="token punctuation">.</span><span class="token constant">UNKNOW</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">LocalTransactionState</span> <span class="token function">checkLocalTransaction</span><span class="token punctuation">(</span><span class="token class-name">MessageExt</span> msg<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;MQ检查消息Tag【&quot;</span><span class="token operator">+</span>msg<span class="token punctuation">.</span><span class="token function">getTags</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;】的本地事务执行结果&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token class-name">LocalTransactionState</span><span class="token punctuation">.</span><span class="token constant">COMMIT_MESSAGE</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-6-2-使用限制" tabindex="-1"><a class="header-anchor" href="#_4-6-2-使用限制" aria-hidden="true">#</a> 4.6.2 使用限制</h3><ol><li>事务消息不支持延时消息和批量消息。</li><li>为了避免单个消息被检查太多次而导致半队列消息累积，我们默认将单个消息的检查次数限制为 15 次，但是用户可以通过 Broker 配置文件的 <code>transactionCheckMax</code>参数来修改此限制。如果已经检查某条消息超过 N 次的话（ N = <code>transactionCheckMax</code> ） 则 Broker 将丢弃此消息，并在默认情况下同时打印错误日志。用户可以通过重写 <code>AbstractTransactionCheckListener</code> 类来修改这个行为。</li><li>事务消息将在 Broker 配置文件中的参数 transactionMsgTimeout 这样的特定时间长度之后被检查。当发送事务消息时，用户还可以通过设置用户属性 CHECK_IMMUNITY_TIME_IN_SECONDS 来改变这个限制，该参数优先于 <code>transactionMsgTimeout</code> 参数。</li><li>事务性消息可能不止一次被检查或消费。</li><li>提交给用户的目标主题消息可能会失败，目前这依日志的记录而定。它的高可用性通过 RocketMQ 本身的高可用性机制来保证，如果希望确保事务消息不丢失、并且事务完整性得到保证，建议使用同步的双重写入机制。</li><li>事务消息的生产者 ID 不能与其他类型消息的生产者 ID 共享。与其他类型的消息不同，事务消息允许反向查询、MQ服务器能通过它们的生产者 ID 查询到消费者。</li></ol>`,106);function X(J,$){const t=i("ExternalLinkIcon");return o(),c("div",null,[_,s("p",null,[s("a",M,[n("下载地址"),e(t)])]),T,C,N,L,I,B,R,Q,E,D,P,A,O,j,H,F,U,s("p",null,[z,n("有一个对其扩展的开源项目"),s("a",G,[n("incubator-rocketmq-externals"),e(t)]),n("，这个项目中有一个子模块叫"),Y,n("，这个便是管理控制台项目了，先将"),s("a",K,[n("incubator-rocketmq-externals"),e(t)]),n("拉到本地，因为我们需要自己对"),V,n("进行编译打包运行。")]),W])}const ns=l(S,[["render",X],["__file","RocketMQ-01.html.vue"]]);export{ns as default};
