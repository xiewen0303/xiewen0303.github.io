import{_ as i,o as a,c as e,e as l}from"./app-8a8706d6.js";const r={},t=l('<h3 id="🌖-消息队列" tabindex="-1"><a class="header-anchor" href="#🌖-消息队列" aria-hidden="true">#</a> 🌖 消息队列</h3><p>消息队列是用于传输和保存消息的容器，也是大型分布式系统中常用的技术，主要解决应用耦合、异步消息、流量削锋等问题。后台开发必学，也是面试重点。</p><h4 id="知识" tabindex="-1"><a class="header-anchor" href="#知识" aria-hidden="true">#</a> 知识</h4><ul><li>消息队列的作用</li><li>RabbitMQ 消息队列 <ul><li>生产消费模型</li><li>交换机模型</li><li>死信队列</li><li>延迟队列</li><li>消息持久化</li><li>Java 操作</li><li>集群搭建</li></ul></li><li>相关技术：Kafka、ActiveMQ、TubeMQ、RocketMQ</li></ul><h4 id="学习建议" tabindex="-1"><a class="header-anchor" href="#学习建议" aria-hidden="true">#</a> 学习建议</h4><p>和缓存一样，学会如何使用消息队列并不难，无非就是调用 API 去生产、转发和消费消息。</p><p>因此，建议先能够独立使用它，了解消息队列的应用场景；再学习如何在 Java 中操作消息队列中间件，并尝试和项目相结合，感受消息队列带来的好处。</p><p>这里我建议初学者先学习 RabbitMQ，比 Kafka 要好理解一些。跟着视频教程实操一遍即可，可以等到面试前再去深入了解原理和高级特性。</p><h4 id="经典面试题" tabindex="-1"><a class="header-anchor" href="#经典面试题" aria-hidden="true">#</a> 经典面试题</h4><ol><li>使用消息队列有哪些优缺点？</li><li>如何保证消息消费的幂等性？</li><li>消息队列有哪些路由模型？</li><li>你是否用过消息队列，解决过什么问题？</li></ol>',10),d=[t];function h(c,n){return a(),e("div",null,d)}const s=i(r,[["render",h],["__file","xiaoxiduilie.html.vue"]]);export{s as default};
