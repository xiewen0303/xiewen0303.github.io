(window.webpackJsonp=window.webpackJsonp||[]).push([[82],{1208:function(e,r,v){"use strict";v.r(r);var t=v(3),_=Object(t.a)({},(function(){var e=this,r=e._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("ul",[r("li",[r("p",[e._v("搜索镜像：docker search name")]),e._v(" "),r("p",[e._v("镜像官网：https://hub.docker.com")])]),e._v(" "),r("li",[r("p",[e._v("构建容器：docker run -itd --name=mycentos centos:7")]),e._v(" "),r("ul",[r("li",[r("strong",[e._v("-i")]),e._v(" ：表示以交互模式运行容器（让容器的标准输入保持打开）")]),e._v(" "),r("li",[r("strong",[e._v("-d")]),e._v("：表示后台运行容器，并返回容器ID")]),e._v(" "),r("li",[r("strong",[e._v("-t")]),e._v('：为容器重新分配一个伪输入终端 { "registry-mirrors": ["https://5xok66d4.mirror.aliyuncs.com"] }')]),e._v(" "),r("li",[r("strong",[e._v("--name")]),e._v("：为容器指定名称 查看本地所有的容器：docker ps -a")])])]),e._v(" "),r("li",[r("p",[e._v("查看本地所有的容器："),r("strong",[e._v("docker ps -a")])])]),e._v(" "),r("li",[r("p",[e._v("查看本地正在运行的容器："),r("strong",[e._v("docker ps")])])]),e._v(" "),r("li",[r("p",[e._v("停止容器："),r("strong",[e._v("docker stop id或name")])])]),e._v(" "),r("li",[r("p",[e._v("一次性停止所有容器："),r("strong",[e._v("docker stop $(docker ps -a -q)")])])]),e._v(" "),r("li",[r("p",[e._v("启动容器："),r("strong",[e._v("docker start id或name")]),e._v("**")])]),e._v(" "),r("li",[r("p",[e._v("重启容器："),r("strong",[e._v("docker restart id或name")])])]),e._v(" "),r("li",[r("p",[e._v("删除容器："),r("strong",[e._v("docker rm id或name")])])]),e._v(" "),r("li",[r("p",[e._v("强制删除容器："),r("strong",[e._v("docker rmi -f id或name")])])]),e._v(" "),r("li",[r("p",[e._v("查看容器详细信息："),r("strong",[e._v("docker inspect id或name")])])]),e._v(" "),r("li",[r("p",[e._v("进入容器："),r("strong",[e._v("docker exec -it id /bin/bash")])])]),e._v(" "),r("li",[r("p",[e._v("获取所有容器的id："),r("strong",[e._v("docker ps -a -q")]),e._v(" 或 "),r("strong",[e._v("docker ps -aq")])])]),e._v(" "),r("li",[r("p",[e._v("查看容器日志："),r("strong",[e._v("docker ps logs id/name")])])]),e._v(" "),r("li",[r("p",[e._v("动态查看日志："),r("strong",[e._v("docker ps logs -f id/name")])])]),e._v(" "),r("li",[r("p",[e._v("查看容器创建的网络："),r("strong",[e._v("docker network ls")])])]),e._v(" "),r("li",[r("p",[e._v("删除网络："),r("strong",[e._v("docker network rm container_name_net")])])])]),e._v(" "),r("p",[e._v("容器启动之attached和detached模式")]),e._v(" "),r("p",[e._v("两种模式最简单的对比理解就是：attached模式在前台运行，detached模式在后台运行。")]),e._v(" "),r("p",[e._v("detached模式的开启方法，就是加一个参数"),r("code",[e._v("-d")]),e._v("或者"),r("code",[e._v("--detach")]),e._v("，一般我们采用的都是这种方式，命令如下：")]),e._v(" "),r("div",{staticClass:"language-shell line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-shell"}},[r("code",[r("span",{pre:!0,attrs:{class:"token function"}},[e._v("docker")]),e._v(" run "),r("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-d")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-p")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[e._v("80")]),e._v(":80 nginx\n")])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br")])]),r("p",[e._v("attached模式可能调试起来更为方便，因此Docker也提供了detached模式转换attached模式："),r("code",[e._v("docker attach id/name")])]),e._v(" "),r("p",[e._v("镜像的导入与导出")]),e._v(" "),r("ul",[r("li",[e._v("镜像的导出："),r("strong",[e._v("docker image save 镜像名称:版本 -o 导出的文件名")])]),e._v(" "),r("li",[e._v("镜像的导入："),r("strong",[e._v("docker image load -i 镜像地址+名称")])])])])}),[],!1,null,null,null);r.default=_.exports}}]);